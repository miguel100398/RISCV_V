#==============================================================================
# Hierarchical dofile generated by Conformal LEC
# Version: 21.10-p100 (15-Apr-2021) (64 bit executable)
#------------------------------------------------------------------------------
# For additional reporting on 'not written' modules, see the 'VERBOSE REPORTING'
# section at the end of the hierarchical dofile
#------------------------------------------------------------------------------
# The command 'set module property' sets the instance context for the current
# root module. It is intended only for hierarchical comparison, and should
# not be modified by the user.
#------------------------------------------------------------------------------
# TERMS AND NOTATIONS USED
#------------------------------------------------------------------------------
# Module Instantiation Ratio: Average number of instantiations per matching module
# Wrapper size: #Logic gates enclosing the module's instance, and bounded by key-points
# Periphery size: #Logic gates in the fanin and fanout cone of instance's input and output boundary, and bounded by key-points
# 0: Indicates pin is constant zero
# 1: Indicates pin is constant one
# X: Indicates pin is full DC
# U: Indicates pin is unreachable
# Z: Indicates pin is floating
# KP<--: Indicates pin's fanin is directly connected to key-point (ignores buffers/inverters)
# -->KP: Indicates pin's fanout is directly connected to key-point (ignores buffers/inverters)
# REP: Indicates pin is representative pin
# EQ_REP: <polarity> rep_pinname>: Indicates pin is a member EQ pin with
# 'rep_pinname' specifying the representative, and 'polarity' specifying
# if it is positive or negative equivalent
# = : Indicates that the pins on LHS and RHS are mapped
# + : Indicates positive polarity for pin mapping
# - : Indicates negative polarity for pin mapping
# ? : Indicates unknown polarity for pin mapping
# G: Indicates that the pin belongs to Golden
# R: Indicates that the pin belongs to Revised
# IN: Indicates that the pin is an Input pin
# OUT: Indicates that the pin is an Output pin
# IO: Indicates that the pin is an Inout pin. Polarity of Inout pin is
#     always '?' because of name-only mapping
#==============================================================================

set_system_mode setup
vpxmode
delete set_seq_merge
set_seq_merge /riscv/id_ex_pipe/data_out_reg[funct7][6]  /riscv/id_ex_pipe/data_out_reg[immediate][31] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][1] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][2] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][3] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][4] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][5] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][6] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][7] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][8] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][9] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][10] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][11] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][12] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][13] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][14] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][15] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][16] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][17] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][18] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][19] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][20] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][21] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][22] -Golden
set_seq_merge /uart0/csr/uart_status_0_csr_reg[dont_care][0]  /uart0/csr/uart_status_0_csr_reg[dont_care][23] -Golden
set_seq_merge /riscv/if_id_pipe_data_out_reg[instruction][0]  /riscv/if_id_pipe_data_out_reg[instruction][1] -Golden
set_seq_merge /riscv/if_id_pipe_data_out_reg[instruction][29]  /riscv/if_id_pipe_data_out_reg[instruction][31] -Golden
set_seq_merge /riscv/if_id_pipe_data_out_reg[pc][0]  /riscv/if_id_pipe_data_out_reg[pc_add4][0] -Golden
set_seq_merge /riscv/if_id_pipe_data_out_reg[pc][1]  /riscv/if_id_pipe_data_out_reg[pc_add4][1] -Golden
set_seq_merge /riscv/id_ex_pipe_data_out_reg[funct7][4]  /riscv/id_ex_pipe_data_out_reg[funct7][6] -Golden
set_seq_merge /riscv/id_ex_pipe_data_out_reg[pc][0]  /riscv/id_ex_pipe_data_out_reg[pc_add4][0] -Golden
set_seq_merge /riscv/id_ex_pipe_data_out_reg[pc][1]  /riscv/id_ex_pipe_data_out_reg[pc_add4][1] -Golden
set_seq_merge /riscv/id_ex_pipe_data_out_reg[funct7][4]  /riscv/id_ex_pipe_data_out_reg[immediate][29] -Golden
tclmode
# Comparing
#-------------------------------------------------------------------------------
# MODULE riscv32_USE_BRANCH_PREDICTOR1 (G) INSTANCE /riscv (G)
# MODULE riscv32_USE_BRANCH_PREDICTOR1 (R) INSTANCE /riscv (R)
# Wrapper size: (G) = 12971  (R) = 17476
# Periphery size: (G) = 13475  (R) = 19924
# Pins directly connected to key-points/constants: (G) = 80.49%  (R) = 81.71%
#-------------------------------------------------------------------------------
# RESOLVED Constraints
# IN (G) clk  (KP<--)(REP)  =   (R) clk  (KP<--)(REP) (by sim and name)
# IN (G) rst_n  (KP<--)(REP)  =   (R) rst_n  (KP<--)(REP) (by sim and name)
# IN (G) data_in_instr[31] U (EQ_REP: +data_in_instr[29])  =   (R) data_in_instr[31] 0U(REP) (by sim and name)
# IN (G) data_in_instr[30] (REP)  =   (R) data_in_instr[30] (REP) (by sim and name)
# IN (G) data_in_instr[29] (REP)  =   (R) data_in_instr[29] (REP) (by sim and name)
# IN (G) data_in_instr[28] (REP)  =   (R) data_in_instr[28] (REP) (by sim and name)
# IN (G) data_in_instr[27] (REP)  =   (R) data_in_instr[27] (REP) (by sim and name)
# IN (G) data_in_instr[26] (REP)  =   (R) data_in_instr[26] (REP) (by sim and name)
# IN (G) data_in_instr[25] (REP)  =   (R) data_in_instr[25] (REP) (by sim and name)
# IN (G) data_in_instr[24] (REP)  =   (R) data_in_instr[24] (REP) (by sim and name)
# IN (G) data_in_instr[23] (REP)  =   (R) data_in_instr[23] (REP) (by sim and name)
# IN (G) data_in_instr[22] (REP)  =   (R) data_in_instr[22] (REP) (by sim and name)
# IN (G) data_in_instr[21] (REP)  =   (R) data_in_instr[21] (REP) (by sim and name)
# IN (G) data_in_instr[20] (REP)  =   (R) data_in_instr[20] (REP) (by sim and name)
# IN (G) data_in_instr[19] (REP)  =   (R) data_in_instr[19] (REP) (by sim and name)
# IN (G) data_in_instr[18] (REP)  =   (R) data_in_instr[18] (REP) (by sim and name)
# IN (G) data_in_instr[17] (REP)  =   (R) data_in_instr[17] (REP) (by sim and name)
# IN (G) data_in_instr[16] (REP)  =   (R) data_in_instr[16] (REP) (by sim and name)
# IN (G) data_in_instr[15] (REP)  =   (R) data_in_instr[15] (REP) (by sim and name)
# IN (G) data_in_instr[14] (REP)  =   (R) data_in_instr[14] (REP) (by sim and name)
# IN (G) data_in_instr[13] (REP)  =   (R) data_in_instr[13] (REP) (by sim and name)
# IN (G) data_in_instr[12] (REP)  =   (R) data_in_instr[12] (REP) (by sim and name)
# IN (G) data_in_instr[11] (REP)  =   (R) data_in_instr[11] (REP) (by sim and name)
# IN (G) data_in_instr[10] (REP)  =   (R) data_in_instr[10] (REP) (by sim and name)
# IN (G) data_in_instr[9] (REP)  =   (R) data_in_instr[9] (REP) (by sim and name)
# IN (G) data_in_instr[8] (REP)  =   (R) data_in_instr[8] (REP) (by sim and name)
# IN (G) data_in_instr[7] (REP)  =   (R) data_in_instr[7] (REP) (by sim and name)
# IN (G) data_in_instr[6] (REP)  =   (R) data_in_instr[6] (REP) (by sim and name)
# IN (G) data_in_instr[5] (REP)  =   (R) data_in_instr[5] (REP) (by sim and name)
# IN (G) data_in_instr[4] (REP)  =   (R) data_in_instr[4] (REP) (by sim and name)
# IN (G) data_in_instr[3] (REP)  =   (R) data_in_instr[3] (REP) (by sim and name)
# IN (G) data_in_instr[2] (REP)  =   (R) data_in_instr[2] (REP) (by sim and name)
# IN (G) data_in_instr[1] U (EQ_REP: +data_in_instr[0])  =   (R) data_in_instr[1] 0U(REP) (by sim and name)
# IN (G) data_in_instr[0] (REP)  =   (R) data_in_instr[0] (REP) (by sim and name)
# IN (G) data_in_data[31]  (-->KP)(REP)  =   (R) data_in_data[31]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[30]  (-->KP)(REP)  =   (R) data_in_data[30]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[29]  (-->KP)(REP)  =   (R) data_in_data[29]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[28]  (-->KP)(REP)  =   (R) data_in_data[28]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[27]  (-->KP)(REP)  =   (R) data_in_data[27]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[26]  (-->KP)(REP)  =   (R) data_in_data[26]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[25]  (-->KP)(REP)  =   (R) data_in_data[25]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[24]  (-->KP)(REP)  =   (R) data_in_data[24]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[23]  (-->KP)(REP)  =   (R) data_in_data[23]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[22]  (-->KP)(REP)  =   (R) data_in_data[22]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[21]  (-->KP)(REP)  =   (R) data_in_data[21]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[20]  (-->KP)(REP)  =   (R) data_in_data[20]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[19]  (-->KP)(REP)  =   (R) data_in_data[19]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[18]  (-->KP)(REP)  =   (R) data_in_data[18]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[17]  (-->KP)(REP)  =   (R) data_in_data[17]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[16]  (-->KP)(REP)  =   (R) data_in_data[16]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[15]  (-->KP)(REP)  =   (R) data_in_data[15]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[14]  (-->KP)(REP)  =   (R) data_in_data[14]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[13]  (-->KP)(REP)  =   (R) data_in_data[13]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[12]  (-->KP)(REP)  =   (R) data_in_data[12]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[11]  (-->KP)(REP)  =   (R) data_in_data[11]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[10]  (-->KP)(REP)  =   (R) data_in_data[10]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[9]  (-->KP)(REP)  =   (R) data_in_data[9]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[8]  (-->KP)(REP)  =   (R) data_in_data[8]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[7]  (-->KP)(REP)  =   (R) data_in_data[7]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[6]  (-->KP)(REP)  =   (R) data_in_data[6]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[5]  (-->KP)(REP)  =   (R) data_in_data[5]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[4]  (-->KP)(REP)  =   (R) data_in_data[4]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[3]  (-->KP)(REP)  =   (R) data_in_data[3]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[2]  (-->KP)(REP)  =   (R) data_in_data[2]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[1]  (-->KP)(REP)  =   (R) data_in_data[1]  (-->KP)(REP) (by sim and name)
# IN (G) data_in_data[0]  (-->KP)(REP)  =   (R) data_in_data[0]  (-->KP)(REP) (by sim and name)
# RESOLVED Constraints
# OUT (G) addr_out_instr[31]  (KP<--)(REP)  =   (R) addr_out_instr[31]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[30]  (KP<--)(REP)  =   (R) addr_out_instr[30]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[29]  (KP<--)(REP)  =   (R) addr_out_instr[29]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[28]  (KP<--)(REP)  =   (R) addr_out_instr[28]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[27]  (KP<--)(REP)  =   (R) addr_out_instr[27]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[26]  (KP<--)(REP)  =   (R) addr_out_instr[26]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[25]  (KP<--)(REP)  =   (R) addr_out_instr[25]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[24]  (KP<--)(REP)  =   (R) addr_out_instr[24]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[23]  (KP<--)(REP)  =   (R) addr_out_instr[23]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[22]  (KP<--)(REP)  =   (R) addr_out_instr[22]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[21]  (KP<--)(REP)  =   (R) addr_out_instr[21]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[20]  (KP<--)(REP)  =   (R) addr_out_instr[20]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[19]  (KP<--)(REP)  =   (R) addr_out_instr[19]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[18]  (KP<--)(REP)  =   (R) addr_out_instr[18]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[17]  (KP<--)(REP)  =   (R) addr_out_instr[17]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[16]  (KP<--)(REP)  =   (R) addr_out_instr[16]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[15]  (KP<--)(REP)  =   (R) addr_out_instr[15]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[14]  (KP<--)(REP)  =   (R) addr_out_instr[14]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[13]  (KP<--)(REP)  =   (R) addr_out_instr[13]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[12]  (KP<--)(REP)  =   (R) addr_out_instr[12]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[11]  (KP<--)(REP)  =   (R) addr_out_instr[11]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[10]  (KP<--)(REP)  =   (R) addr_out_instr[10]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[9]  (KP<--)(REP)  =   (R) addr_out_instr[9]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[8]  (KP<--)(REP)  =   (R) addr_out_instr[8]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[7]  (KP<--)(REP)  =   (R) addr_out_instr[7]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[6]  (KP<--)(REP)  =   (R) addr_out_instr[6]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[5]  (KP<--)(REP)  =   (R) addr_out_instr[5]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[4]  (KP<--)(REP)  =   (R) addr_out_instr[4]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[3]  (KP<--)(REP)  =   (R) addr_out_instr[3]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[2]  (KP<--)(REP)  =   (R) addr_out_instr[2]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_instr[1] U (KP<--)(REP)  =   (R) addr_out_instr[1] 0U(REP) (by name)
# OUT (G) addr_out_instr[0] U (KP<--)(REP)  =   (R) addr_out_instr[0] 0U(REP) (by name)
# OUT (G) addr_out_data[31]  (KP<--)(REP)  =   (R) addr_out_data[31]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[30]  (KP<--)(REP)  =   (R) addr_out_data[30]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[29]  (KP<--)(REP)  =   (R) addr_out_data[29]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[28]  (KP<--)(REP)  =   (R) addr_out_data[28]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[27]  (KP<--)(REP)  =   (R) addr_out_data[27]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[26]  (KP<--)(REP)  =   (R) addr_out_data[26]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[25]  (KP<--)(REP)  =   (R) addr_out_data[25]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[24]  (KP<--)(REP)  =   (R) addr_out_data[24]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[23]  (KP<--)(REP)  =   (R) addr_out_data[23]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[22]  (KP<--)(REP)  =   (R) addr_out_data[22]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[21]  (KP<--)(REP)  =   (R) addr_out_data[21]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[20]  (KP<--)(REP)  =   (R) addr_out_data[20]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[19]  (KP<--)(REP)  =   (R) addr_out_data[19]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[18]  (KP<--)(REP)  =   (R) addr_out_data[18]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[17]  (KP<--)(REP)  =   (R) addr_out_data[17]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[16]  (KP<--)(REP)  =   (R) addr_out_data[16]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[15]  (KP<--)(REP)  =   (R) addr_out_data[15]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[14]  (KP<--)(REP)  =   (R) addr_out_data[14]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[13]  (KP<--)(REP)  =   (R) addr_out_data[13]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[12]  (KP<--)(REP)  =   (R) addr_out_data[12]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[11]  (KP<--)(REP)  =   (R) addr_out_data[11]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[10]  (KP<--)(REP)  =   (R) addr_out_data[10]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[9]  (KP<--)(REP)  =   (R) addr_out_data[9]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[8]  (KP<--)(REP)  =   (R) addr_out_data[8]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[7]  (KP<--)(REP)  =   (R) addr_out_data[7]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[6]  (KP<--)(REP)  =   (R) addr_out_data[6]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[5]  (KP<--)(REP)  =   (R) addr_out_data[5]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[4]  (KP<--)(REP)  =   (R) addr_out_data[4]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[3]  (KP<--)(REP)  =   (R) addr_out_data[3]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[2]  (KP<--)(REP)  =   (R) addr_out_data[2]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[1]  (KP<--)(REP)  =   (R) addr_out_data[1]  (KP<--)(REP) (by sim and name)
# OUT (G) addr_out_data[0]  (KP<--)(REP)  =   (R) addr_out_data[0]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[31]  (KP<--)(REP)  =   (R) data_out_data[31]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[30]  (KP<--)(REP)  =   (R) data_out_data[30]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[29]  (KP<--)(REP)  =   (R) data_out_data[29]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[28]  (KP<--)(REP)  =   (R) data_out_data[28]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[27]  (KP<--)(REP)  =   (R) data_out_data[27]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[26]  (KP<--)(REP)  =   (R) data_out_data[26]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[25]  (KP<--)(REP)  =   (R) data_out_data[25]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[24]  (KP<--)(REP)  =   (R) data_out_data[24]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[23]  (KP<--)(REP)  =   (R) data_out_data[23]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[22]  (KP<--)(REP)  =   (R) data_out_data[22]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[21]  (KP<--)(REP)  =   (R) data_out_data[21]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[20]  (KP<--)(REP)  =   (R) data_out_data[20]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[19]  (KP<--)(REP)  =   (R) data_out_data[19]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[18]  (KP<--)(REP)  =   (R) data_out_data[18]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[17]  (KP<--)(REP)  =   (R) data_out_data[17]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[16]  (KP<--)(REP)  =   (R) data_out_data[16]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[15]  (KP<--)(REP)  =   (R) data_out_data[15]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[14]  (KP<--)(REP)  =   (R) data_out_data[14]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[13]  (KP<--)(REP)  =   (R) data_out_data[13]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[12]  (KP<--)(REP)  =   (R) data_out_data[12]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[11]  (KP<--)(REP)  =   (R) data_out_data[11]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[10]  (KP<--)(REP)  =   (R) data_out_data[10]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[9]  (KP<--)(REP)  =   (R) data_out_data[9]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[8]  (KP<--)(REP)  =   (R) data_out_data[8]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[7]  (KP<--)(REP)  =   (R) data_out_data[7]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[6]  (KP<--)(REP)  =   (R) data_out_data[6]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[5]  (KP<--)(REP)  =   (R) data_out_data[5]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[4]  (KP<--)(REP)  =   (R) data_out_data[4]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[3]  (KP<--)(REP)  =   (R) data_out_data[3]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[2]  (KP<--)(REP)  =   (R) data_out_data[2]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[1]  (KP<--)(REP)  =   (R) data_out_data[1]  (KP<--)(REP) (by sim and name)
# OUT (G) data_out_data[0]  (KP<--)(REP)  =   (R) data_out_data[0]  (KP<--)(REP) (by sim and name)
# OUT (G) rd_en_data  (KP<--)(REP)  =   (R) rd_en_data  (KP<--)(REP) (by sim and name)
# OUT (G) wr_en_data  (KP<--)(REP)  =   (R) wr_en_data  (KP<--)(REP) (by sim and name)
set_root_module riscv32_USE_BRANCH_PREDICTOR1 -Golden
set_root_module riscv32_USE_BRANCH_PREDICTOR1 -Revised
set_module_property -instance /riscv -Golden
set_module_property -instance /riscv -Revised
# Constraint commands 
add_ignored_inputs {data_in_instr[31]} -Golden
# UR
add_pin_equivalences {data_in_instr[29]} {data_in_instr[31]} -hier -Golden
add_ignored_inputs {data_in_instr[1]} -Golden
# UR
add_pin_equivalences {data_in_instr[0]} {data_in_instr[1]} -hier -Golden
add_ignored_outputs {addr_out_instr[1]} -Golden -annotate 
# UR
add_ignored_outputs {addr_out_instr[1]} -Revised -annotate 
# UR stuck_at
add_ignored_outputs {addr_out_instr[0]} -Golden -annotate 
# UR
add_ignored_outputs {addr_out_instr[0]} -Revised -annotate 
# UR stuck_at
add_pin_constraints 0 {data_in_instr[31]} -Revised
add_ignored_inputs {data_in_instr[31]} -Revised
# UR stuck_at
add_pin_constraints 0 {data_in_instr[1]} -Revised
add_ignored_inputs {data_in_instr[1]} -Revised
# UR stuck_at
add_output_stuck_at 0 {addr_out_instr[1]} -Revised -hier
add_output_stuck_at 0 {addr_out_instr[0]} -Revised -hier
report_black_box -NOHidden
set_system_mode lec
report_design_data; report_unmapped_points -summary; report_unmapped_points -notmapped; analyze_datapath -module -verbose; eval analyze_datapath -flowgraph -verbose
add_compared_points -all
compare
save_hier_compare_result
set_system_mode setup
add_black_box riscv32_USE_BRANCH_PREDICTOR1 -module -hier -Golden
add_black_box riscv32_USE_BRANCH_PREDICTOR1 -module -hier -Revised
usage
# Root Modules
# Comparing
#-------------------------------------------------------------------------------
# MODULE RISC_V_pipeline (G) INSTANCE / (G)
# MODULE RISC_V_pipeline (R) INSTANCE / (R)
# Wrapper size: (G) = 0  (R) = 0
# Periphery size: (G) = 0  (R) = 0
#-------------------------------------------------------------------------------
# RESOLVED Constraints
# IN (G) clk_pad (REP)  =   (R) clk_pad (REP) (by name)
# IN (G) reset_pad (REP)  =   (R) reset_pad (REP) (by name)
# IN (G) gpio_port_in_pad[7] (REP)  =   (R) gpio_port_in_pad[7] (REP) (by name)
# IN (G) gpio_port_in_pad[6] (REP)  =   (R) gpio_port_in_pad[6] (REP) (by name)
# IN (G) gpio_port_in_pad[5] (REP)  =   (R) gpio_port_in_pad[5] (REP) (by name)
# IN (G) gpio_port_in_pad[4] (REP)  =   (R) gpio_port_in_pad[4] (REP) (by name)
# IN (G) gpio_port_in_pad[3] (REP)  =   (R) gpio_port_in_pad[3] (REP) (by name)
# IN (G) gpio_port_in_pad[2] (REP)  =   (R) gpio_port_in_pad[2] (REP) (by name)
# IN (G) gpio_port_in_pad[1] (REP)  =   (R) gpio_port_in_pad[1] (REP) (by name)
# IN (G) gpio_port_in_pad[0] (REP)  =   (R) gpio_port_in_pad[0] (REP) (by name)
# IN (G) uart_rx_pad (REP)  =   (R) uart_rx_pad (REP) (by name)
# RESOLVED Constraints
# OUT (G) gpio_port_out_pad[7] (REP)  =   (R) gpio_port_out_pad[7] (REP) (by name)
# OUT (G) gpio_port_out_pad[6] (REP)  =   (R) gpio_port_out_pad[6] (REP) (by name)
# OUT (G) gpio_port_out_pad[5] (REP)  =   (R) gpio_port_out_pad[5] (REP) (by name)
# OUT (G) gpio_port_out_pad[4] (REP)  =   (R) gpio_port_out_pad[4] (REP) (by name)
# OUT (G) gpio_port_out_pad[3] (REP)  =   (R) gpio_port_out_pad[3] (REP) (by name)
# OUT (G) gpio_port_out_pad[2] (REP)  =   (R) gpio_port_out_pad[2] (REP) (by name)
# OUT (G) gpio_port_out_pad[1] (REP)  =   (R) gpio_port_out_pad[1] (REP) (by name)
# OUT (G) gpio_port_out_pad[0] (REP)  =   (R) gpio_port_out_pad[0] (REP) (by name)
# OUT (G) uart_tx_pad (REP)  =   (R) uart_tx_pad (REP) (by name)
# RESOLVED Constraints
# IO (G) VDD1 (REP)  =   (R) VDD1 (REP) (by name)
# IO (G) VDD2 (REP)  =   (R) VDD2 (REP) (by name)
# IO (G) VSS1 (REP)  =   (R) VSS1 (REP) (by name)
# IO (G) VSS2 (REP)  =   (R) VSS2 (REP) (by name)
# IO (G) VSS3 (REP)  =   (R) VSS3 (REP) (by name)
# IO (G) VDDIOR (REP)  =   (R) VDDIOR (REP) (by name)
# IO (G) VSSIOR (REP)  =   (R) VSSIOR (REP) (by name)
set_root_module RISC_V_pipeline -Golden
set_root_module RISC_V_pipeline -Revised
set_module_property -instance / -Golden
set_module_property -instance / -Revised
report_black_box -NOHidden
set_system_mode lec
report_design_data; report_unmapped_points -summary; report_unmapped_points -notmapped; analyze_datapath -module -verbose; eval analyze_datapath -flowgraph -verbose
add_compared_points -all
compare
save_hier_compare_result
set_system_mode setup
usage
report_hier_compare_result
report_hier_compare_result -Nonequivalent
report_hier_compare_result -Abort
report_hier_compare_result -Uncompared
#-------------------------------------------------------------------------------
# VERBOSE REPORTING
#-------------------------------------------------------------------------------
# The following modules are not written  because they have been added as black box:
# PADVDD (G)
# PADVSS (G)
# PADVDDIOR (G)
# PADVSSIOR (G)
# padIORINGCORNER (G)
# PADVDD (R)
# PADVDDIOR (R)
# PADVSS (R)
# PADVSSIOR (R)
#-------------------------------------------------------------------------------
# The following Golden modules are not written because of non-matching
# instance names in Revised:
# mux_NUM_ENTRIES4_WIDTH32 (Instance: riscv/mux_forward_B) (G)
# timer_HALF_PULSE1_WIDTH32 (Instance: uart0/rx0/datapath/wait_bit_timer) (G)
# ROM_DATA_WIDTH32_ADDR_WIDTH12 (Instance: instr_mem) (G)
# branch_predictor_1bit_IGNORED_PC_BITS2_PC_WIDTH32_NUM_ENTRIES8 (Instance: riscv/genblk1.branch_pred) (G)
# Adder_WIDTH32 (Instance: riscv/adder_branch) (G)
# mux_NUM_ENTRIES2_WIDTH32 (Instance: riscv/mux_next_pc_branch) (G)
# register_WIDTH32_RST_VAL4194304 (Instance: riscv/pc_reg) (G)
# UART_tx_datapath (Instance: uart0/tx0/datapath) (G)
# FIFO_DEPTH8_DATA_WIDTH32 (Instance: uart0/csr/fifo_uart_send_data) (G)
# timer_HALF_PULSE0_WIDTH32 (Instance: uart0/tx0/datapath/wait_bit_timer) (G)
# UART_tx (Instance: uart0/tx0) (G)
# id_ex_reg (Instance: riscv/id_ex_pipe) (G)
# UART_rx (Instance: uart0/rx0) (G)
# UART_csr_UART_csr_if (Instance: uart0/csr) (G)
# ex_mem_reg (Instance: riscv/ex_mem_pipe) (G)
# forwarding_unit (Instance: riscv/forward) (G)
# ALU_LENGTH32_REG_INPUTS0_REG_OUTPUTS0_CHECK_PARAM1 (Instance: riscv/ALU_i) (G)
# riscv32_control_unit (Instance: riscv/control) (G)
# BTB_IGNORED_PC_BITS2_PC_WIDTH32_NUM_ENTRIES8 (Instance: riscv/genblk1.branch_pred/BTB_i) (G)
# BHT_1bit_IGNORED_PC_BITS2_PC_WIDTH32_NUM_ENTRIES8 (Instance: riscv/genblk1.branch_pred/BHT_i) (G)
# mem_wb_reg (Instance: riscv/mem_wb_pipe) (G)
# RAM_DATA_WIDTH32_ADDR_WIDTH8 (Instance: data_mem) (G)
# mem_ctrl (Instance: mem_ctrl0) (G)
# UART_rx_datapath (Instance: uart0/rx0/datapath) (G)
# UART_rx_fsm (Instance: uart0/rx0/fsm) (G)
# shift_register_SHIFT_LEFT0_WIDTH11_RST_VAL2047 (Instance: uart0/tx0/datapath/shft_reg) (G)
# UART_tx_fsm (Instance: uart0/tx0/fsm) (G)
# GPIO_csr (Instance: gpio_i/csr) (G)
# ALU_ctrl (Instance: riscv/ALU_ctrl_i) (G)
# UART (Instance: uart0) (G)
# GPIO (Instance: gpio_i) (G)
# riscv32_imm_gen (Instance: riscv/imm_gen) (G)
# register_file_DATA_WIDTH32_NUM_REGS32_PROTECT_REG_ZERO1_USE_SP_REG1_SP_REG2_SP_RST_VALxffffffff_CHECK_PARAM1_ASYNC_READ1_USE_BYPASS0_USE_POSEDGE0 (Instance: riscv/rf) (G)
# if_id_reg (Instance: riscv/if_id_pipe) (G)
#-------------------------------------------------------------------------------
# The following Revised modules are not written because of non-matching
# instance names in Golden:
# add_signed_75 (Instance: riscv/ADD_TC_OP) (R)
# csa_tree_584 (Instance: riscv/csa_tree_ALU_i_mul_153_50) (R)
# csa_tree_ALU_i_eq_218_40_group_2 (Instance: riscv/csa_tree_ALU_i_eq_218_40_groupi) (R)
# DPOPT_INTERNAL_INST (Instance: riscv/DPOPT_INTERNAL_INSTi) (R)
#-------------------------------------------------------------------------------
# _END_OF_LEC_HIERARCHICAL_DOFILE_
