/home/ubuntu/mbucio/tools/openROAD/flow/util/preprocessLib.py -i /home/ubuntu/mbucio/tools/openROAD/flow/platforms/sky130hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib -o objects/sky130hd/riscv_v_decode_element/base/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Opening file for replace: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/sky130hd/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
Commented 0 lines containing "original_pin"
Replaced malformed functions 0
Writing replaced file: objects/sky130hd/riscv_v_decode_element/base/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
mkdir -p results/sky130hd/riscv_v_decode_element/base/
echo 60.0 > results/sky130hd/riscv_v_decode_element/base/clock_period.txt
mkdir -p ./results/sky130hd/riscv_v_decode_element/base ./logs/sky130hd/riscv_v_decode_element/base ./reports/sky130hd/riscv_v_decode_element/base ./objects/sky130hd/riscv_v_decode_element/base
(env time -f 'Elapsed time: %E[h:]min:sec. CPU time: user %U sys %S (%P). Peak memory: %MKB.' /home/ubuntu/mbucio/tools/openROAD/tools/install/yosys/bin/yosys -v 3 -c /home/ubuntu/mbucio/tools/openROAD/flow/scripts/synth_canonicalize.tcl) 2>&1 | tee /home/ubuntu/mbucio/tools/openROAD/flow/logs/sky130hd/riscv_v_decode_element/base/1_1_yosys_canonicalize.log
1. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_7EB58.v
2. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_1F582_5645A.v
3. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_96DA9_C2B4E.v
4. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_300B3_9090A.v
5. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_969A4_CCEB1.v
6. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_63257_B3D37.v
7. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_A4EAF_A7C6B.v
8. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_C3F9D_39151.v
9. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_E6BB0_71521.v
10. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_EA379.v
11. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_EE621_F935D.v
12. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_300C0.v
13. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_A8A75.v
14. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_stage_C9449.v
15. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_ctrl.v
16. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_csr_ctrl.v
17. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_csr.v
18. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_rf_ctrl.v
19. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_rf.v
20. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_decode.v
21. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_memory.v
22. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_reduct_src.v
23. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_bitwise_and.v
24. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_bw_and.v
25. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_bitwise_or.v
26. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_bw_or.v
27. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_bitwise_xor.v
28. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_bw_xor.v
29. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/shifter.v
30. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_shifter.v
31. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_logic_ALU.v
32. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/full_adder.v
33. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/half_adder.v
34. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/ripple_carry_adder.v
35. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/behavioral_adder.v
36. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/adder_nbit.v
37. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_adder.v
38. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_twos_comp_sel.v
39. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/multiplier_2bit.v
40. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/vedic_mul_unsigned_2bits.v
41. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/vedic_mul_unsigned_4bits.v
42. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/vedic_mul_unsigned_8bits.v
43. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/vedic_mul_unsigned_16bits.v
44. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/vedic_mul_unsigned_32bits.v
45. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/vedic_mul_unsigned_64bits.v
46. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/vedic_mul_unsigned_128bits.v
47. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_mul.v
48. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_extend.v
49. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_arithmetic_ALU.v
50. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_permutation_ALU.v
51. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_exe_alu.v
52. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_decode_element.v
53. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_bypass.v
54. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_swizzle.v
55. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_execute.v
56. Executing Verilog-2005 frontend: ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v.v
57. Executing Liberty frontend: ./objects/sky130hd/riscv_v_decode_element/base/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
58. Executing Verilog-2005 frontend: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/sky130hd/cells_clkgate_hd.v
Using ABC speed script.
Extracting clock period from SDC file: ./results/sky130hd/riscv_v_decode_element/base/clock_period.txt
Setting clock period to 60.0
59. Executing HIERARCHY pass (managing design hierarchy).
60. Executing AST frontend in derive mode using pre-parsed AST for module `\riscv_v_decode_element'.
Warning: Replacing memory \valid_osize with list of registers. See ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_decode_element.v:262
Warning: Replacing memory \merge_osize with list of registers. See ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_decode_element.v:234
Warning: Replacing memory \is_reduct_osize with list of registers. See ./designs/src/riscv_v_decode_element/convert_to_v/riscv_v_decode_element.v:177
60.1. Analyzing design hierarchy..
60.2. Analyzing design hierarchy..
61. Executing OPT_CLEAN pass (remove unused cells and wires).
Warning: Ignoring module riscv_v_decode_element because it contains processes (run 'proc' command first).
62. Executing RTLIL backend.
Warnings: 4 unique messages, 4 total
End of script. Logfile hash: cf96f3d29a, CPU: user 0.21s system 0.02s, MEM: 53.88 MB peak
Yosys 0.46 (git sha1 e97731b9d, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 55% 2x read_liberty (0 sec), 23% 114x read_verilog (0 sec), ...
Elapsed time: 0:00.29[h:]min:sec. CPU time: user 0.26 sys 0.03 (100%). Peak memory: 56320KB.
mkdir -p ./results/sky130hd/riscv_v_decode_element/base ./logs/sky130hd/riscv_v_decode_element/base ./reports/sky130hd/riscv_v_decode_element/base
(export VERILOG_FILES=./results/sky130hd/riscv_v_decode_element/base/1_synth.rtlil; \
env time -f 'Elapsed time: %E[h:]min:sec. CPU time: user %U sys %S (%P). Peak memory: %MKB.' /home/ubuntu/mbucio/tools/openROAD/tools/install/yosys/bin/yosys -v 3 -c /home/ubuntu/mbucio/tools/openROAD/flow/scripts/synth_hier_report.tcl) 2>&1 | tee /home/ubuntu/mbucio/tools/openROAD/flow/logs/sky130hd/riscv_v_decode_element/base/1_1_yosys_hier_report.log
End of script. Logfile hash: da39a3ee5e, CPU: user 0.00s system 0.00s, MEM: 11.25 MB peak
Yosys 0.46 (git sha1 e97731b9d, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: no commands executed
Elapsed time: 0:00.00[h:]min:sec. CPU time: user 0.00 sys 0.00 (80%). Peak memory: 12928KB.
mkdir -p ./results/sky130hd/riscv_v_decode_element/base ./logs/sky130hd/riscv_v_decode_element/base ./reports/sky130hd/riscv_v_decode_element/base ./objects/sky130hd/riscv_v_decode_element/base
(export VERILOG_FILES=./results/sky130hd/riscv_v_decode_element/base/1_synth.rtlil; \
env time -f 'Elapsed time: %E[h:]min:sec. CPU time: user %U sys %S (%P). Peak memory: %MKB.' /home/ubuntu/mbucio/tools/openROAD/tools/install/yosys/bin/yosys -v 3 -c /home/ubuntu/mbucio/tools/openROAD/flow/scripts/synth.tcl) 2>&1 | tee /home/ubuntu/mbucio/tools/openROAD/flow/logs/sky130hd/riscv_v_decode_element/base/1_1_yosys.log
1. Executing RTLIL frontend.
2. Executing Liberty frontend: ./objects/sky130hd/riscv_v_decode_element/base/lib/sky130_fd_sc_hd__tt_025C_1v80.lib
3. Executing Verilog-2005 frontend: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/sky130hd/cells_clkgate_hd.v
Using ABC speed script.
Extracting clock period from SDC file: ./results/sky130hd/riscv_v_decode_element/base/clock_period.txt
Setting clock period to 60.0
synth -top riscv_v_decode_element -run :fine -flatten -extra-map /home/ubuntu/mbucio/tools/openROAD/flow/platforms/common/lcu_kogge_stone.v
4. Executing SYNTH pass.
4.1. Executing HIERARCHY pass (managing design hierarchy).
4.1.1. Analyzing design hierarchy..
4.1.2. Analyzing design hierarchy..
4.2. Executing PROC pass (convert processes to netlists).
4.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
4.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
4.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
4.2.4. Executing PROC_INIT pass (extract init attributes).
4.2.5. Executing PROC_ARST pass (detect async resets in processes).
4.2.6. Executing PROC_ROM pass (convert switches to ROMs).
4.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
4.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
4.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
4.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).
4.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
4.2.12. Executing OPT_EXPR pass (perform const folding).
4.3. Executing FLATTEN pass (flatten design).
4.4. Executing OPT_EXPR pass (perform const folding).
4.5. Executing OPT_CLEAN pass (remove unused cells and wires).
4.6. Executing CHECK pass (checking for obvious problems).
4.7. Executing OPT pass (performing simple optimizations).
4.7.1. Executing OPT_EXPR pass (perform const folding).
4.7.2. Executing OPT_MERGE pass (detect identical cells).
4.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
4.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
4.7.5. Executing OPT_MERGE pass (detect identical cells).
4.7.6. Executing OPT_DFF pass (perform DFF optimizations).
4.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
4.7.8. Executing OPT_EXPR pass (perform const folding).
4.7.9. Rerunning OPT passes. (Maybe there is more to do..)
4.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
4.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
4.7.12. Executing OPT_MERGE pass (detect identical cells).
4.7.13. Executing OPT_DFF pass (perform DFF optimizations).
4.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
4.7.15. Executing OPT_EXPR pass (perform const folding).
4.7.16. Finished OPT passes. (There is nothing left to do.)
4.8. Executing FSM pass (extract and optimize FSM).
4.8.1. Executing FSM_DETECT pass (finding FSMs in design).
4.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).
4.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).
4.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
4.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).
4.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
4.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).
4.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
4.9. Executing OPT pass (performing simple optimizations).
4.9.1. Executing OPT_EXPR pass (perform const folding).
4.9.2. Executing OPT_MERGE pass (detect identical cells).
4.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
4.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
4.9.5. Executing OPT_MERGE pass (detect identical cells).
4.9.6. Executing OPT_DFF pass (perform DFF optimizations).
4.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
4.9.8. Executing OPT_EXPR pass (perform const folding).
4.9.9. Finished OPT passes. (There is nothing left to do.)
4.10. Executing WREDUCE pass (reducing word size of cells).
4.11. Executing PEEPOPT pass (run peephole optimizers).
4.12. Executing OPT_CLEAN pass (remove unused cells and wires).
4.13. Executing ALUMACC pass (create $alu and $macc cells).
4.14. Executing SHARE pass (SAT-based resource sharing).
4.15. Executing OPT pass (performing simple optimizations).
4.15.1. Executing OPT_EXPR pass (perform const folding).
4.15.2. Executing OPT_MERGE pass (detect identical cells).
4.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
4.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
4.15.5. Executing OPT_MERGE pass (detect identical cells).
4.15.6. Executing OPT_DFF pass (perform DFF optimizations).
4.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
4.15.8. Executing OPT_EXPR pass (perform const folding).
4.15.9. Rerunning OPT passes. (Maybe there is more to do..)
4.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
4.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
4.15.12. Executing OPT_MERGE pass (detect identical cells).
4.15.13. Executing OPT_DFF pass (perform DFF optimizations).
4.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
4.15.15. Executing OPT_EXPR pass (perform const folding).
4.15.16. Finished OPT passes. (There is nothing left to do.)
4.16. Executing MEMORY pass.
4.16.1. Executing OPT_MEM pass (optimize memories).
4.16.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
4.16.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
4.16.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).
4.16.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
4.16.6. Executing OPT_CLEAN pass (remove unused cells and wires).
4.16.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
4.16.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
4.16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
4.16.10. Executing MEMORY_COLLECT pass (generating $mem cells).
4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
5. Executing SYNTH pass.
5.1. Executing OPT pass (performing simple optimizations).
5.1.1. Executing OPT_EXPR pass (perform const folding).
5.1.2. Executing OPT_MERGE pass (detect identical cells).
5.1.3. Executing OPT_DFF pass (perform DFF optimizations).
5.1.4. Executing OPT_CLEAN pass (remove unused cells and wires).
5.1.5. Finished fast OPT passes.
5.2. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
5.3. Executing OPT pass (performing simple optimizations).
5.3.1. Executing OPT_EXPR pass (perform const folding).
5.3.2. Executing OPT_MERGE pass (detect identical cells).
5.3.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
5.3.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
5.3.5. Executing OPT_MERGE pass (detect identical cells).
5.3.6. Executing OPT_SHARE pass.
5.3.7. Executing OPT_DFF pass (perform DFF optimizations).
5.3.8. Executing OPT_CLEAN pass (remove unused cells and wires).
5.3.9. Executing OPT_EXPR pass (perform const folding).
5.3.10. Rerunning OPT passes. (Maybe there is more to do..)
5.3.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
5.3.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
5.3.13. Executing OPT_MERGE pass (detect identical cells).
5.3.14. Executing OPT_SHARE pass.
5.3.15. Executing OPT_DFF pass (perform DFF optimizations).
5.3.16. Executing OPT_CLEAN pass (remove unused cells and wires).
5.3.17. Executing OPT_EXPR pass (perform const folding).
5.3.18. Finished OPT passes. (There is nothing left to do.)
5.4. Executing TECHMAP pass (map to technology primitives).
5.4.1. Executing Verilog-2005 frontend: /home/ubuntu/mbucio/tools/openROAD/tools/install/yosys/bin/../share/yosys/techmap.v
5.4.2. Executing Verilog-2005 frontend: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/common/lcu_kogge_stone.v
5.4.3. Continuing TECHMAP pass.
5.5. Executing OPT pass (performing simple optimizations).
5.5.1. Executing OPT_EXPR pass (perform const folding).
5.5.2. Executing OPT_MERGE pass (detect identical cells).
5.5.3. Executing OPT_DFF pass (perform DFF optimizations).
5.5.4. Executing OPT_CLEAN pass (remove unused cells and wires).
5.5.5. Finished fast OPT passes.
5.6. Executing ABC pass (technology mapping using ABC).
5.6.1. Extracting gate netlist of module `\riscv_v_decode_element' to `<abc-temp-dir>/input.blif'..
5.7. Executing OPT pass (performing simple optimizations).
5.7.1. Executing OPT_EXPR pass (perform const folding).
5.7.2. Executing OPT_MERGE pass (detect identical cells).
5.7.3. Executing OPT_DFF pass (perform DFF optimizations).
5.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
5.7.5. Finished fast OPT passes.
5.8. Executing HIERARCHY pass (managing design hierarchy).
5.8.1. Analyzing design hierarchy..
5.8.2. Analyzing design hierarchy..
5.9. Printing statistics.
5.10. Executing CHECK pass (checking for obvious problems).
6. Executing OPT pass (performing simple optimizations).
6.1. Executing OPT_EXPR pass (perform const folding).
6.2. Executing OPT_MERGE pass (detect identical cells).
6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
6.5. Executing OPT_MERGE pass (detect identical cells).
6.6. Executing OPT_DFF pass (perform DFF optimizations).
6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
6.8. Executing OPT_EXPR pass (perform const folding).
6.9. Rerunning OPT passes. (Maybe there is more to do..)
6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
6.12. Executing OPT_MERGE pass (detect identical cells).
6.13. Executing OPT_DFF pass (perform DFF optimizations).
6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
6.15. Executing OPT_EXPR pass (perform const folding).
6.16. Finished OPT passes. (There is nothing left to do.)
7. Executing TECHMAP pass (map to technology primitives).
7.1. Executing Verilog-2005 frontend: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/sky130hd/cells_latch_hd.v
7.2. Continuing TECHMAP pass.
8. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbn_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtn_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE|IQ&!DE' in pin attribute of cell 'sky130_fd_sc_hd__edfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfbbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfrtp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfsbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfstp_4' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxbp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_1' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_2' - skipping.
Warning: Found unsupported expression 'D&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sdfxtp_4' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxbp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_1' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_2' - skipping.
Warning: Found unsupported expression 'D&DE&!SCE|IQ&!DE&!SCE|SCD&SCE' in pin attribute of cell 'sky130_fd_sc_hd__sedfxtp_4' - skipping.
8.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
9. Executing OPT pass (performing simple optimizations).
9.1. Executing OPT_EXPR pass (perform const folding).
9.2. Executing OPT_MERGE pass (detect identical cells).
9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
9.5. Executing OPT_MERGE pass (detect identical cells).
9.6. Executing OPT_DFF pass (perform DFF optimizations).
9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
9.8. Executing OPT_EXPR pass (perform const folding).
9.9. Finished OPT passes. (There is nothing left to do.)
abc -script /home/ubuntu/mbucio/tools/openROAD/flow/scripts/abc_speed.script -liberty ./objects/sky130hd/riscv_v_decode_element/base/lib/sky130_fd_sc_hd__tt_025C_1v80.lib -constr ./objects/sky130hd/riscv_v_decode_element/base/abc.constr -dont_use sky130_fd_sc_hd__probe_p_8 -dont_use sky130_fd_sc_hd__probec_p_8 -dont_use sky130_fd_sc_hd__lpflow_bleeder_1 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_1 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_16 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_2 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_4 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_8 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_1 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_16 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_2 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_4 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_8 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_12 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_3 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_4 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_6 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_8 -dont_use sky130_fd_sc_hd__lpflow_inputiso0n_1 -dont_use sky130_fd_sc_hd__lpflow_inputiso0p_1 -dont_use sky130_fd_sc_hd__lpflow_inputiso1n_1 -dont_use sky130_fd_sc_hd__lpflow_inputiso1p_1 -dont_use sky130_fd_sc_hd__lpflow_inputisolatch_1 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_1 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_16 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_2 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_4 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_8 -dont_use sky130_fd_sc_hd__lpflow_isobufsrckapwr_16 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_1 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_2 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_4 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_4 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_1 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_2 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_4 -D 60.0
10. Executing ABC pass (technology mapping using ABC).
10.1. Extracting gate netlist of module `\riscv_v_decode_element' to `<abc-temp-dir>/input.blif'..
10.1.1. Executing ABC.
10.1.2. Re-integrating ABC results.
11. Executing SETUNDEF pass (replace undef values with defined constants).
12. Executing SPLITNETS pass (splitting up multi-bit signals).
13. Executing OPT_CLEAN pass (remove unused cells and wires).
14. Executing HILOMAP pass (mapping to constant drivers).
15. Executing INSBUF pass (insert buffer cells for connected wires).
16. Executing CHECK pass (checking for obvious problems).
17. Printing statistics.
18. Executing Verilog backend.
exec cp ./designs/sky130hd/riscv_v_decode_element/constraint.sdc ./results/sky130hd/riscv_v_decode_element/base/1_synth.sdc
Warnings: 26 unique messages, 234 total
End of script. Logfile hash: df8fa1f6ff, CPU: user 0.83s system 0.03s, MEM: 47.88 MB peak
Yosys 0.46 (git sha1 e97731b9d, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 46% 2x abc (0 sec), 8% 31x opt_expr (0 sec), ...
Elapsed time: 0:01.65[h:]min:sec. CPU time: user 1.59 sys 0.06 (100%). Peak memory: 49664KB.
mkdir -p ./results/sky130hd/riscv_v_decode_element/base ./logs/sky130hd/riscv_v_decode_element/base ./reports/sky130hd/riscv_v_decode_element/base
cp ./results/sky130hd/riscv_v_decode_element/base/1_1_yosys.v ./results/sky130hd/riscv_v_decode_element/base/1_synth.v
OpenROAD v2.0-16316-gf9cfd9383 
Features included (+) or not (-): +Charts +GPU +GUI +Python
This program is licensed under the BSD-3 license. See the LICENSE file for details.
Components of this program may be licensed under more restrictive licenses which must be honored.
[INFO ORD-0030] Using 8 thread(s).
mkdir -p ./objects/sky130hd/riscv_v_decode_element/base
Running floorplan.tcl, stage 2_1_floorplan
[INFO ODB-0227] LEF file: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/sky130hd/lef/sky130_fd_sc_hd.tlef, created 13 layers, 25 vias
[INFO ODB-0227] LEF file: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/sky130hd/lef/sky130_fd_sc_hd_merged.lef, created 441 library cells
[WARNING STA-0347] current_design for other than top cell not supported.
[WARNING STA-0366] port 'clk' not found.
Master sky130_ef_sc_hd__decap_12 is loaded but not used in the design

==========================================================================
Floorplan check_setup
--------------------------------------------------------------------------
Warning: There are 4 unconstrained endpoints.
number instances in verilog is 621
[WARNING IFP-0028] Core area lower left (200.000, 200.000) snapped to (200.100, 201.280).
[INFO IFP-0001] Added 514 rows of 3043 site unithd.
[INFO RSZ-0026] Removed 30 buffers.
Default units for flow
 time 1ns
 capacitance 1pF
 resistance 1kohm
 voltage 1v
 current 1mA
 power 1nW
 distance 1um
Report metrics stage 2, floorplan final...

==========================================================================
floorplan final report_design_area
--------------------------------------------------------------------------
Design area 3943 u^2 0% utilization.
Elapsed time: 0:00.56[h:]min:sec. CPU time: user 0.52 sys 0.04 (100%). Peak memory: 135788KB.
Running io_placement_random.tcl, stage 2_2_floorplan_io
[WARNING STA-0347] current_design for other than top cell not supported.
[WARNING STA-0366] port 'clk' not found.
place_pins -hor_layers met3 -ver_layers met2 -random
Found 0 macro blocks.
Using 2 tracks default min distance between IO pins.
[INFO PPL-0007] Random pin placement.
Elapsed time: 0:00.42[h:]min:sec. CPU time: user 0.37 sys 0.05 (100%). Peak memory: 131184KB.
Running tdms_place.tcl, stage 2_3_floorplan_tdms
exec cp ./results/sky130hd/riscv_v_decode_element/base/2_2_floorplan_io.odb ./results/sky130hd/riscv_v_decode_element/base/2_3_floorplan_tdms.odb
Elapsed time: 0:00.15[h:]min:sec. CPU time: user 0.11 sys 0.03 (100%). Peak memory: 100972KB.
Running macro_place.tcl, stage 2_4_floorplan_macro
[WARNING STA-0347] current_design for other than top cell not supported.
[WARNING STA-0366] port 'clk' not found.
No macros found: Skipping macro_placement
Elapsed time: 0:00.42[h:]min:sec. CPU time: user 0.38 sys 0.03 (100%). Peak memory: 130160KB.
Running tapcell.tcl, stage 2_5_floorplan_tapcell
[WARNING STA-0347] current_design for other than top cell not supported.
[WARNING STA-0366] port 'clk' not found.
[INFO TAP-0005] Inserted 26058 tapcells.
Elapsed time: 0:00.47[h:]min:sec. CPU time: user 0.41 sys 0.05 (100%). Peak memory: 140780KB.
Running pdn.tcl, stage 2_6_floorplan_pdn
[WARNING STA-0347] current_design for other than top cell not supported.
[WARNING STA-0366] port 'clk' not found.
[INFO PDN-0001] Inserting grid: grid
Elapsed time: 0:01.83[h:]min:sec. CPU time: user 1.72 sys 0.11 (100%). Peak memory: 228404KB.
cp ./results/sky130hd/riscv_v_decode_element/base/2_6_floorplan_pdn.odb ./results/sky130hd/riscv_v_decode_element/base/2_floorplan.odb
Running global_place_skip_io.tcl, stage 3_1_place_gp_skip_io
[INFO GPL-0002] DBU: 1000
[INFO GPL-0003] SiteSize: (  0.460  2.720 ) um
[INFO GPL-0004] CoreBBox: ( 200.100 201.280 ) ( 1599.880 1599.360 ) um
[INFO GPL-0006] NumInstances:             26649
[INFO GPL-0007] NumPlaceInstances:          591
[INFO GPL-0008] NumFixedInstances:        26058
[INFO GPL-0009] NumDummyInstances:            0
[INFO GPL-0010] NumNets:                    915
[INFO GPL-0011] NumPins:                   2438
[INFO GPL-0012] DieBBox:  (  0.000  0.000 ) ( 1600.000 1600.000 ) um
[INFO GPL-0013] CoreBBox: ( 200.100 201.280 ) ( 1599.880 1599.360 ) um
[INFO GPL-0016] CoreArea:            1957004.422 um^2
[INFO GPL-0017] NonPlaceInstsArea:    32603.770 um^2
[INFO GPL-0018] PlaceInstsArea:        3942.531 um^2
[INFO GPL-0019] Util:                     0.205 %
[INFO GPL-0020] StdInstsArea:          3942.531 um^2
[INFO GPL-0021] MacroInstsArea:           0.000 um^2
[INFO GPL-0031] FillerInit:NumGCells:    293558
[INFO GPL-0032] FillerInit:NumGNets:        915
[INFO GPL-0033] FillerInit:NumGPins:       2438
[INFO GPL-0023] TargetDensity:            1.000
[INFO GPL-0024] AvrgPlaceInstArea:        6.671 um^2
[INFO GPL-0025] IdealBinArea:             6.671 um^2
[INFO GPL-0026] IdealBinCnt:             293362
[INFO GPL-0027] TotalBinArea:        1957004.422 um^2
[INFO GPL-0028] BinCnt:       512    512
[INFO GPL-0029] BinSize: (  2.734  2.731 )
[INFO GPL-0030] NumBins: 262144
[INFO GPL-0002] DBU: 1000
[INFO GPL-0003] SiteSize: (  0.460  2.720 ) um
[INFO GPL-0004] CoreBBox: ( 200.100 201.280 ) ( 1599.880 1599.360 ) um
[INFO GPL-0006] NumInstances:             26649
[INFO GPL-0007] NumPlaceInstances:          591
[INFO GPL-0008] NumFixedInstances:        26058
[INFO GPL-0009] NumDummyInstances:            0
[INFO GPL-0010] NumNets:                    915
[INFO GPL-0011] NumPins:                   1726
[INFO GPL-0012] DieBBox:  (  0.000  0.000 ) ( 1600.000 1600.000 ) um
[INFO GPL-0013] CoreBBox: ( 200.100 201.280 ) ( 1599.880 1599.360 ) um
[INFO GPL-0016] CoreArea:            1957004.422 um^2
[INFO GPL-0017] NonPlaceInstsArea:    32603.770 um^2
[INFO GPL-0018] PlaceInstsArea:        3942.531 um^2
[INFO GPL-0019] Util:                     0.205 %
[INFO GPL-0020] StdInstsArea:          3942.531 um^2
[INFO GPL-0021] MacroInstsArea:           0.000 um^2
[INFO GPL-0031] FillerInit:NumGCells:    150010
[INFO GPL-0032] FillerInit:NumGNets:        915
[INFO GPL-0033] FillerInit:NumGPins:       1726
[INFO GPL-0023] TargetDensity:            0.511
[INFO GPL-0024] AvrgPlaceInstArea:        6.671 um^2
[INFO GPL-0025] IdealBinArea:            13.054 um^2
[INFO GPL-0026] IdealBinCnt:             149915
[INFO GPL-0027] TotalBinArea:        1957004.422 um^2
[INFO GPL-0028] BinCnt:       256    256
[INFO GPL-0029] BinSize: (  5.468  5.462 )
[INFO GPL-0030] NumBins: 65536
[NesterovSolve] Iter:    1 overflow: 0.985 HPWL: 587813
[NesterovSolve] Iter:   10 overflow: 0.984 HPWL: 298689
[NesterovSolve] Iter:   20 overflow: 0.984 HPWL: 298279
[NesterovSolve] Iter:   30 overflow: 0.984 HPWL: 297957
[NesterovSolve] Iter:   40 overflow: 0.984 HPWL: 297484
[NesterovSolve] Iter:   50 overflow: 0.984 HPWL: 297379
[NesterovSolve] Iter:   60 overflow: 0.984 HPWL: 297440
[NesterovSolve] Iter:   70 overflow: 0.984 HPWL: 297462
[NesterovSolve] Iter:   80 overflow: 0.984 HPWL: 297399
[NesterovSolve] Iter:   90 overflow: 0.984 HPWL: 297430
[NesterovSolve] Iter:  100 overflow: 0.984 HPWL: 297548
[NesterovSolve] Iter:  110 overflow: 0.984 HPWL: 297651
[NesterovSolve] Iter:  120 overflow: 0.984 HPWL: 297873
[NesterovSolve] Iter:  130 overflow: 0.984 HPWL: 298341
[NesterovSolve] Iter:  140 overflow: 0.984 HPWL: 299028
[NesterovSolve] Iter:  150 overflow: 0.983 HPWL: 300186
[NesterovSolve] Iter:  160 overflow: 0.970 HPWL: 302049
[NesterovSolve] Iter:  170 overflow: 0.952 HPWL: 304595
[NesterovSolve] Iter:  180 overflow: 0.941 HPWL: 308486
[NesterovSolve] Iter:  190 overflow: 0.886 HPWL: 312069
[NesterovSolve] Iter:  200 overflow: 0.799 HPWL: 314887
[NesterovSolve] Iter:  210 overflow: 0.682 HPWL: 316659
[NesterovSolve] Iter:  220 overflow: 0.596 HPWL: 321480
[NesterovSolve] Iter:  230 overflow: 0.553 HPWL: 338669
[NesterovSolve] Iter:  240 overflow: 0.526 HPWL: 341981
[NesterovSolve] Iter:  250 overflow: 0.511 HPWL: 340189
[NesterovSolve] Iter:  260 overflow: 0.493 HPWL: 338512
[NesterovSolve] Iter:  270 overflow: 0.486 HPWL: 333949
[NesterovSolve] Iter:  280 overflow: 0.474 HPWL: 340847
[NesterovSolve] Iter:  290 overflow: 0.463 HPWL: 377050
[NesterovSolve] Iter:  300 overflow: 0.454 HPWL: 411328
[NesterovSolve] Iter:  310 overflow: 0.436 HPWL: 534878
[NesterovSolve] Iter:  320 overflow: 0.424 HPWL: 896454
[NesterovSolve] Iter:  330 overflow: 0.409 HPWL: 1129062
[NesterovSolve] Iter:  340 overflow: 0.383 HPWL: 1501541
[NesterovSolve] Iter:  350 overflow: 0.357 HPWL: 1727105
[NesterovSolve] Iter:  360 overflow: 0.334 HPWL: 2049228
[NesterovSolve] Iter:  370 overflow: 0.313 HPWL: 2294515
[NesterovSolve] Iter:  380 overflow: 0.277 HPWL: 2584579
[NesterovSolve] Iter:  390 overflow: 0.248 HPWL: 2881313
[NesterovSolve] Iter:  400 overflow: 0.218 HPWL: 3169480
[NesterovSolve] Iter:  410 overflow: 0.183 HPWL: 3497683
[NesterovSolve] Iter:  420 overflow: 0.152 HPWL: 3852884
[NesterovSolve] Iter:  430 overflow: 0.119 HPWL: 4150935
[NesterovSolve] Iter:  440 overflow: 0.100 HPWL: 4476310
[NesterovSolve] Finished with Overflow: 0.099978
Elapsed time: 0:35.77[h:]min:sec. CPU time: user 173.05 sys 0.18 (484%). Peak memory: 244164KB.
Running io_placement.tcl, stage 3_2_place_iop
place_pins -hor_layers met3 -ver_layers met2
Found 0 macro blocks.
Using 2 tracks default min distance between IO pins.
[INFO PPL-0010] Tentative 0 to set up sections.
[INFO PPL-0001] Number of slots           5828
[INFO PPL-0002] Number of I/O             712
[INFO PPL-0003] Number of I/O w/sink      703
[INFO PPL-0004] Number of I/O w/o sink    9
[INFO PPL-0005] Slots per section         200
[INFO PPL-0006] Slots increase factor     0.01
[INFO PPL-0008] Successfully assigned pins to sections.
[INFO PPL-0012] I/O nets HPWL: 544412.94 um.
Elapsed time: 0:00.72[h:]min:sec. CPU time: user 0.66 sys 0.06 (100%). Peak memory: 164464KB.
Running global_place.tcl, stage 3_3_place_gp
[INFO GPL-0002] DBU: 1000
[INFO GPL-0003] SiteSize: (  0.460  2.720 ) um
[INFO GPL-0004] CoreBBox: ( 200.100 201.280 ) ( 1599.880 1599.360 ) um
[INFO GPL-0006] NumInstances:             26649
[INFO GPL-0007] NumPlaceInstances:          591
[INFO GPL-0008] NumFixedInstances:        26058
[INFO GPL-0009] NumDummyInstances:            0
[INFO GPL-0010] NumNets:                    915
[INFO GPL-0011] NumPins:                   2438
[INFO GPL-0012] DieBBox:  (  0.000  0.000 ) ( 1600.000 1600.000 ) um
[INFO GPL-0013] CoreBBox: ( 200.100 201.280 ) ( 1599.880 1599.360 ) um
[INFO GPL-0016] CoreArea:            1957004.422 um^2
[INFO GPL-0017] NonPlaceInstsArea:    32603.770 um^2
[INFO GPL-0018] PlaceInstsArea:        3942.531 um^2
[INFO GPL-0019] Util:                     0.205 %
[INFO GPL-0020] StdInstsArea:          3942.531 um^2
[INFO GPL-0021] MacroInstsArea:           0.000 um^2
[INFO GPL-0031] FillerInit:NumGCells:    293558
[INFO GPL-0032] FillerInit:NumGNets:        915
[INFO GPL-0033] FillerInit:NumGPins:       2438
[INFO GPL-0023] TargetDensity:            1.000
[INFO GPL-0024] AvrgPlaceInstArea:        6.671 um^2
[INFO GPL-0025] IdealBinArea:             6.671 um^2
[INFO GPL-0026] IdealBinCnt:             293362
[INFO GPL-0027] TotalBinArea:        1957004.422 um^2
[INFO GPL-0028] BinCnt:       512    512
[INFO GPL-0029] BinSize: (  2.734  2.731 )
[INFO GPL-0030] NumBins: 262144
global_placement -density 0.5110243529686704 -pad_left 0 -pad_right 0 -routability_driven -timing_driven
[INFO GPL-0002] DBU: 1000
[INFO GPL-0003] SiteSize: (  0.460  2.720 ) um
[INFO GPL-0004] CoreBBox: ( 200.100 201.280 ) ( 1599.880 1599.360 ) um
[INFO GPL-0006] NumInstances:             26649
[INFO GPL-0007] NumPlaceInstances:          591
[INFO GPL-0008] NumFixedInstances:        26058
[INFO GPL-0009] NumDummyInstances:            0
[INFO GPL-0010] NumNets:                    915
[INFO GPL-0011] NumPins:                   2438
[INFO GPL-0012] DieBBox:  (  0.000  0.000 ) ( 1600.000 1600.000 ) um
[INFO GPL-0013] CoreBBox: ( 200.100 201.280 ) ( 1599.880 1599.360 ) um
[INFO GPL-0016] CoreArea:            1957004.422 um^2
[INFO GPL-0017] NonPlaceInstsArea:    32603.770 um^2
[INFO GPL-0018] PlaceInstsArea:        3942.531 um^2
[INFO GPL-0019] Util:                     0.205 %
[INFO GPL-0020] StdInstsArea:          3942.531 um^2
[INFO GPL-0021] MacroInstsArea:           0.000 um^2
[InitialPlace]  Iter: 1 CG residual: 0.00002776 HPWL: 550362013
[InitialPlace]  Iter: 2 CG residual: 0.00000012 HPWL: 347697284
[InitialPlace]  Iter: 3 CG residual: 0.00000167 HPWL: 329648857
[InitialPlace]  Iter: 4 CG residual: 0.00000011 HPWL: 313597462
[InitialPlace]  Iter: 5 CG residual: 0.00000011 HPWL: 295902877
[INFO GPL-0031] FillerInit:NumGCells:    150010
[INFO GPL-0032] FillerInit:NumGNets:        915
[INFO GPL-0033] FillerInit:NumGPins:       2438
[INFO GPL-0023] TargetDensity:            0.511
[INFO GPL-0024] AvrgPlaceInstArea:        6.671 um^2
[INFO GPL-0025] IdealBinArea:            13.054 um^2
[INFO GPL-0026] IdealBinCnt:             149915
[INFO GPL-0027] TotalBinArea:        1957004.422 um^2
[INFO GPL-0028] BinCnt:       256    256
[INFO GPL-0029] BinSize: (  5.468  5.462 )
[INFO GPL-0030] NumBins: 65536
[NesterovSolve] Iter:    1 overflow: 0.317 HPWL: 283425914
[INFO GPL-0100] Timing-driven: executing resizer for reweighting nets.
[INFO GPL-0101] Timing-driven: worst slack 3.29e-08
[INFO GPL-0103] Timing-driven: weighted 81 nets.
[NesterovSolve] Snapshot saved at iter = 0
[INFO GPL-0075] Routability numCall: 1 inflationIterCnt: 1 bloatIterCnt: 0
[INFO GPL-0036] TileBBox: (    0    0 ) ( 6900 6900 ) DBU
[INFO GPL-0038] TileCnt:     231  231
[INFO GPL-0040] NumTiles: 53361
[INFO GPL-0081] TotalRouteOverflow: 0.9445890188217163
[INFO GPL-0082] OverflowTileCnt: 3
[INFO GPL-0083] 0.5%RC: 0.6639348987336462
[INFO GPL-0084] 1.0%RC: 0.640722306480122
[INFO GPL-0085] 2.0%RC: 0.6198773020215695
[INFO GPL-0086] 5.0%RC: 0.5946792032263974
[INFO GPL-0087] FinalRC: 0.6523286
[INFO GPL-0077] FinalRC lower than targetRC(1.01), routability not needed.
[INFO GPL-0100] Timing-driven: executing resizer for reweighting nets.
[INFO GPL-0101] Timing-driven: worst slack 3.29e-08
[INFO GPL-0103] Timing-driven: weighted 81 nets.
[NesterovSolve] Iter:   10 overflow: 0.277 HPWL: 282283689
[NesterovSolve] Iter:   20 overflow: 0.274 HPWL: 281749855
[NesterovSolve] Iter:   30 overflow: 0.281 HPWL: 281032242
[NesterovSolve] Iter:   40 overflow: 0.277 HPWL: 280030128
[NesterovSolve] Iter:   50 overflow: 0.280 HPWL: 278631660
[NesterovSolve] Iter:   60 overflow: 0.268 HPWL: 276981131
[NesterovSolve] Iter:   70 overflow: 0.344 HPWL: 275621591
[NesterovSolve] Iter:   80 overflow: 0.294 HPWL: 275738352
[NesterovSolve] Iter:   90 overflow: 0.337 HPWL: 275623754
[NesterovSolve] Iter:  100 overflow: 0.334 HPWL: 275588543
[NesterovSolve] Iter:  110 overflow: 0.325 HPWL: 275630189
[NesterovSolve] Iter:  120 overflow: 0.328 HPWL: 275622412
[NesterovSolve] Iter:  130 overflow: 0.331 HPWL: 275594529
[NesterovSolve] Iter:  140 overflow: 0.327 HPWL: 275596828
[NesterovSolve] Iter:  150 overflow: 0.326 HPWL: 275597066
[NesterovSolve] Iter:  160 overflow: 0.327 HPWL: 275592471
[NesterovSolve] Iter:  170 overflow: 0.327 HPWL: 275597955
[NesterovSolve] Iter:  180 overflow: 0.326 HPWL: 275610511
[NesterovSolve] Iter:  190 overflow: 0.327 HPWL: 275608928
[NesterovSolve] Iter:  200 overflow: 0.326 HPWL: 275630024
[NesterovSolve] Iter:  210 overflow: 0.325 HPWL: 275668158
[NesterovSolve] Iter:  220 overflow: 0.325 HPWL: 275722478
[NesterovSolve] Iter:  230 overflow: 0.324 HPWL: 275787115
[NesterovSolve] Iter:  240 overflow: 0.322 HPWL: 275820625
[NesterovSolve] Iter:  250 overflow: 0.322 HPWL: 275753719
[NesterovSolve] Iter:  260 overflow: 0.320 HPWL: 275652686
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              Elapsed time: 5:11.02[h:]min:sec. CPU time: user 295.74 sys 5.36 (96%). Peak memory: 6671636KB.
cp ./results/nangate45/riscv_v_extend/base/5_route.sdc ./results/nangate45/riscv_v_extend/base/6_final.sdc
cp /home/ubuntu/mbucio/tools/openROAD/flow/platforms/nangate45/lef/NangateOpenCellLibrary.tech.lef ./objects/nangate45/riscv_v_extend/base/klayout_tech.lef
sed 's,<lef-files>.*</lef-files>,<lef-files>../../../../../tools/openROAD/flow/objects/nangate45/riscv_v_extend/base/klayout_tech.lef</lef-files> <lef-files>../../../../../tools/openROAD/flow/platforms/nangate45/lef/NangateOpenCellLibrary.macro.mod.lef</lef-files>,g' /home/ubuntu/mbucio/tools/openROAD/flow/platforms/nangate45/FreePDK45.lyt > ./objects/nangate45/riscv_v_extend/base/klayout.lyt
sed -i 's,<map-file>.*</map-file>,<map-file>/home/ubuntu/mbucio/tools/openROAD/flow/platforms/nangate45/*map</map-file>,g' ./objects/nangate45/riscv_v_extend/base/klayout.lyt
(env time -f 'Elapsed time: %E[h:]min:sec. CPU time: user %U sys %S (%P). Peak memory: %MKB.' stdbuf -o L /usr/bin/klayout -zz -rd design_name=riscv_v_extend \
        -rd in_def=./results/nangate45/riscv_v_extend/base/6_final.def \
        -rd in_files="/home/ubuntu/mbucio/tools/openROAD/flow/platforms/nangate45/gds/NangateOpenCellLibrary.gds  " \
        -rd seal_file="" \
        -rd out_file=./results/nangate45/riscv_v_extend/base/6_1_merged.gds \
        -rd tech_file=./objects/nangate45/riscv_v_extend/base/klayout.lyt \
        -rd layer_map= \
        -r /home/ubuntu/mbucio/tools/openROAD/flow/util/def2stream.py) 2>&1 | tee ./logs/nangate45/riscv_v_extend/base/6_1_merge.log
[INFO] Reporting cells prior to loading DEF ...
[INFO] Reading DEF ...
[INFO] Clearing cells...
[INFO] Merging GDS/OAS files...
	/home/ubuntu/mbucio/tools/openROAD/flow/platforms/nangate45/gds/NangateOpenCellLibrary.gds
[INFO] Copying toplevel cell 'riscv_v_extend'
[INFO] Checking for missing cell from GDS/OAS...
[INFO] Found GDS_ALLOW_EMPTY variable.
[INFO] All LEF cells have matching GDS/OAS cells
[INFO] Checking for orphan cell in the final layout...
[INFO] No orphan cells
[INFO] Writing out GDS/OAS './results/nangate45/riscv_v_extend/base/6_1_merged.gds'
Elapsed time: 0:28.36[h:]min:sec. CPU time: user 26.67 sys 1.60 (99%). Peak memory: 3710484KB.
cp results/nangate45/riscv_v_extend/base/6_1_merged.gds results/nangate45/riscv_v_extend/base/6_final.gds
./logs/nangate45/riscv_v_extend/base
Log                            Elapsed seconds Peak Memory/MB
1_1_yosys                                    1             38
1_1_yosys_canonicalize                       0             44
1_1_yosys_hier_report                        0             12
2_1_floorplan                                0            121
2_2_floorplan_io                             0            119
2_3_floorplan_tdms                           0             98
2_4_floorplan_macro                          0            117
2_5_floorplan_tapcell                        0            136
2_6_floorplan_pdn                            4            210
3_1_place_gp_skip_io                      4507           3626
3_2_place_iop                                0            192
3_3_place_gp                              2690           6406
3_4_place_resized                            1            316
3_5_place_dp                                19           7855
4_1_cts                                     19           7859
5_1_grt                                     39          10231
5_2_route                                   78           1242
5_3_fillcell                                24           8618
6_1_fill                                     3            937
6_1_merge                                   28           3623
6_report                                   311           6515
Total                                     7724          10231
