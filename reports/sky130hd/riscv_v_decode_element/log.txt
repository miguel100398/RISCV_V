/home/ubuntu/mbucio/tools/openROAD/flow/util/preprocessLib.py -i /home/ubuntu/mbucio/tools/openROAD/flow/platforms/nangate45/lib/NangateOpenCellLibrary_typical.lib -o objects/nangate45/riscv_v_permutation_ALU/base/lib/NangateOpenCellLibrary_typical.lib
Opening file for replace: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/nangate45/lib/NangateOpenCellLibrary_typical.lib
Commented 0 lines containing "original_pin"
Replaced malformed functions 0
Writing replaced file: objects/nangate45/riscv_v_permutation_ALU/base/lib/NangateOpenCellLibrary_typical.lib
mkdir -p results/nangate45/riscv_v_permutation_ALU/base/
echo 15.0 > results/nangate45/riscv_v_permutation_ALU/base/clock_period.txt
mkdir -p ./results/nangate45/riscv_v_permutation_ALU/base ./logs/nangate45/riscv_v_permutation_ALU/base ./reports/nangate45/riscv_v_permutation_ALU/base ./objects/nangate45/riscv_v_permutation_ALU/base
(env time -f 'Elapsed time: %E[h:]min:sec. CPU time: user %U sys %S (%P). Peak memory: %MKB.' /home/ubuntu/mbucio/tools/openROAD/tools/install/yosys/bin/yosys -v 3 -c /home/ubuntu/mbucio/tools/openROAD/flow/scripts/synth_canonicalize.tcl) 2>&1 | tee /home/ubuntu/mbucio/tools/openROAD/flow/logs/nangate45/riscv_v_permutation_ALU/base/1_1_yosys_canonicalize.log
1. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_7EB58.v
2. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_1F582_5645A.v
3. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_96DA9_C2B4E.v
4. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_300B3_9090A.v
5. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_969A4_CCEB1.v
6. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_63257_B3D37.v
7. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_A4EAF_A7C6B.v
8. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_C3F9D_39151.v
9. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_E6BB0_71521.v
10. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_EA379.v
11. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_EE621_F935D.v
12. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_300C0.v
13. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_A8A75.v
14. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_stage_C9449.v
15. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_ctrl.v
16. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_csr_ctrl.v
17. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_csr.v
18. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_rf_ctrl.v
19. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_rf.v
20. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_decode.v
21. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_memory.v
22. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_reduct_src.v
23. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_bitwise_and.v
24. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_bw_and.v
25. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_bitwise_or.v
26. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_bw_or.v
27. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_bitwise_xor.v
28. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_bw_xor.v
29. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/shifter.v
30. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_shifter.v
31. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_logic_ALU.v
32. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/full_adder.v
33. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/half_adder.v
34. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/ripple_carry_adder.v
35. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/behavioral_adder.v
36. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/adder_nbit.v
37. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_adder.v
38. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_twos_comp_sel.v
39. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/multiplier_2bit.v
40. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/vedic_mul_unsigned_2bits.v
41. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/vedic_mul_unsigned_4bits.v
42. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/vedic_mul_unsigned_8bits.v
43. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/vedic_mul_unsigned_16bits.v
44. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/vedic_mul_unsigned_32bits.v
45. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/vedic_mul_unsigned_64bits.v
46. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/vedic_mul_unsigned_128bits.v
47. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_mul.v
48. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_extend.v
49. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_arithmetic_ALU.v
50. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_permutation_ALU.v
51. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_exe_alu.v
52. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_decode_element.v
53. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_bypass.v
54. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_swizzle.v
55. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v_execute.v
56. Executing Verilog-2005 frontend: ./designs/src/riscv_v_permutation_ALU/convert_to_v/riscv_v.v
57. Executing Liberty frontend: ./objects/nangate45/riscv_v_permutation_ALU/base/lib/NangateOpenCellLibrary_typical.lib
58. Executing Verilog-2005 frontend: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/nangate45/cells_clkgate.v
Using ABC speed script.
Extracting clock period from SDC file: ./results/nangate45/riscv_v_permutation_ALU/base/clock_period.txt
Setting clock period to 15.0
59. Executing HIERARCHY pass (managing design hierarchy).
60. Executing AST frontend in derive mode using pre-parsed AST for module `\riscv_v_permutation_ALU'.
60.1. Analyzing design hierarchy..
60.2. Analyzing design hierarchy..
61. Executing OPT_CLEAN pass (remove unused cells and wires).
Warning: Ignoring module riscv_v_permutation_ALU because it contains processes (run 'proc' command first).
62. Executing RTLIL backend.
Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 177e0404fb, CPU: user 0.16s system 0.02s, MEM: 43.75 MB peak
Yosys 0.46 (git sha1 e97731b9d, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 55% 2x read_liberty (0 sec), 38% 114x read_verilog (0 sec), ...
Elapsed time: 0:00.25[h:]min:sec. CPU time: user 0.22 sys 0.02 (98%). Peak memory: 46080KB.
mkdir -p ./results/nangate45/riscv_v_permutation_ALU/base ./logs/nangate45/riscv_v_permutation_ALU/base ./reports/nangate45/riscv_v_permutation_ALU/base
(export VERILOG_FILES=./results/nangate45/riscv_v_permutation_ALU/base/1_synth.rtlil; \
env time -f 'Elapsed time: %E[h:]min:sec. CPU time: user %U sys %S (%P). Peak memory: %MKB.' /home/ubuntu/mbucio/tools/openROAD/tools/install/yosys/bin/yosys -v 3 -c /home/ubuntu/mbucio/tools/openROAD/flow/scripts/synth_hier_report.tcl) 2>&1 | tee /home/ubuntu/mbucio/tools/openROAD/flow/logs/nangate45/riscv_v_permutation_ALU/base/1_1_yosys_hier_report.log
End of script. Logfile hash: da39a3ee5e, CPU: user 0.00s system 0.00s, MEM: 11.12 MB peak
Yosys 0.46 (git sha1 e97731b9d, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: no commands executed
Elapsed time: 0:00.00[h:]min:sec. CPU time: user 0.00 sys 0.00 (100%). Peak memory: 12928KB.
mkdir -p ./results/nangate45/riscv_v_permutation_ALU/base ./logs/nangate45/riscv_v_permutation_ALU/base ./reports/nangate45/riscv_v_permutation_ALU/base ./objects/nangate45/riscv_v_permutation_ALU/base
(export VERILOG_FILES=./results/nangate45/riscv_v_permutation_ALU/base/1_synth.rtlil; \
env time -f 'Elapsed time: %E[h:]min:sec. CPU time: user %U sys %S (%P). Peak memory: %MKB.' /home/ubuntu/mbucio/tools/openROAD/tools/install/yosys/bin/yosys -v 3 -c /home/ubuntu/mbucio/tools/openROAD/flow/scripts/synth.tcl) 2>&1 | tee /home/ubuntu/mbucio/tools/openROAD/flow/logs/nangate45/riscv_v_permutation_ALU/base/1_1_yosys.log
1. Executing RTLIL frontend.
2. Executing Liberty frontend: ./objects/nangate45/riscv_v_permutation_ALU/base/lib/NangateOpenCellLibrary_typical.lib
3. Executing Verilog-2005 frontend: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/nangate45/cells_clkgate.v
Using ABC speed script.
Extracting clock period from SDC file: ./results/nangate45/riscv_v_permutation_ALU/base/clock_period.txt
Setting clock period to 15.0
synth -top riscv_v_permutation_ALU -run :fine -flatten -extra-map /home/ubuntu/mbucio/tools/openROAD/flow/platforms/common/lcu_kogge_stone.v
4. Executing SYNTH pass.
4.1. Executing HIERARCHY pass (managing design hierarchy).
4.1.1. Analyzing design hierarchy..
4.1.2. Analyzing design hierarchy..
4.2. Executing PROC pass (convert processes to netlists).
4.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
4.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
4.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
4.2.4. Executing PROC_INIT pass (extract init attributes).
4.2.5. Executing PROC_ARST pass (detect async resets in processes).
4.2.6. Executing PROC_ROM pass (convert switches to ROMs).
4.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
4.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
4.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
4.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).
4.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
4.2.12. Executing OPT_EXPR pass (perform const folding).
4.3. Executing FLATTEN pass (flatten design).
4.4. Executing OPT_EXPR pass (perform const folding).
4.5. Executing OPT_CLEAN pass (remove unused cells and wires).
4.6. Executing CHECK pass (checking for obvious problems).
4.7. Executing OPT pass (performing simple optimizations).
4.7.1. Executing OPT_EXPR pass (perform const folding).
4.7.2. Executing OPT_MERGE pass (detect identical cells).
4.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
4.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
4.7.5. Executing OPT_MERGE pass (detect identical cells).
4.7.6. Executing OPT_DFF pass (perform DFF optimizations).
4.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
4.7.8. Executing OPT_EXPR pass (perform const folding).
4.7.9. Finished OPT passes. (There is nothing left to do.)
4.8. Executing FSM pass (extract and optimize FSM).
4.8.1. Executing FSM_DETECT pass (finding FSMs in design).
4.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).
4.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).
4.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
4.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).
4.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
4.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).
4.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
4.9. Executing OPT pass (performing simple optimizations).
4.9.1. Executing OPT_EXPR pass (perform const folding).
4.9.2. Executing OPT_MERGE pass (detect identical cells).
4.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
4.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
4.9.5. Executing OPT_MERGE pass (detect identical cells).
4.9.6. Executing OPT_DFF pass (perform DFF optimizations).
4.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
4.9.8. Executing OPT_EXPR pass (perform const folding).
4.9.9. Finished OPT passes. (There is nothing left to do.)
4.10. Executing WREDUCE pass (reducing word size of cells).
4.11. Executing PEEPOPT pass (run peephole optimizers).
4.12. Executing OPT_CLEAN pass (remove unused cells and wires).
4.13. Executing ALUMACC pass (create $alu and $macc cells).
4.14. Executing SHARE pass (SAT-based resource sharing).
4.15. Executing OPT pass (performing simple optimizations).
4.15.1. Executing OPT_EXPR pass (perform const folding).
4.15.2. Executing OPT_MERGE pass (detect identical cells).
4.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
4.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
4.15.5. Executing OPT_MERGE pass (detect identical cells).
4.15.6. Executing OPT_DFF pass (perform DFF optimizations).
4.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
4.15.8. Executing OPT_EXPR pass (perform const folding).
4.15.9. Finished OPT passes. (There is nothing left to do.)
4.16. Executing MEMORY pass.
4.16.1. Executing OPT_MEM pass (optimize memories).
4.16.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
4.16.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
4.16.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).
4.16.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
4.16.6. Executing OPT_CLEAN pass (remove unused cells and wires).
4.16.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
4.16.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
4.16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
4.16.10. Executing MEMORY_COLLECT pass (generating $mem cells).
4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
5. Executing SYNTH pass.
5.1. Executing OPT pass (performing simple optimizations).
5.1.1. Executing OPT_EXPR pass (perform const folding).
5.1.2. Executing OPT_MERGE pass (detect identical cells).
5.1.3. Executing OPT_DFF pass (perform DFF optimizations).
5.1.4. Executing OPT_CLEAN pass (remove unused cells and wires).
5.1.5. Finished fast OPT passes.
5.2. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
5.3. Executing OPT pass (performing simple optimizations).
5.3.1. Executing OPT_EXPR pass (perform const folding).
5.3.2. Executing OPT_MERGE pass (detect identical cells).
5.3.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
5.3.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
5.3.5. Executing OPT_MERGE pass (detect identical cells).
5.3.6. Executing OPT_SHARE pass.
5.3.7. Executing OPT_DFF pass (perform DFF optimizations).
5.3.8. Executing OPT_CLEAN pass (remove unused cells and wires).
5.3.9. Executing OPT_EXPR pass (perform const folding).
5.3.10. Finished OPT passes. (There is nothing left to do.)
5.4. Executing TECHMAP pass (map to technology primitives).
5.4.1. Executing Verilog-2005 frontend: /home/ubuntu/mbucio/tools/openROAD/tools/install/yosys/bin/../share/yosys/techmap.v
5.4.2. Executing Verilog-2005 frontend: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/common/lcu_kogge_stone.v
5.4.3. Continuing TECHMAP pass.
5.5. Executing OPT pass (performing simple optimizations).
5.5.1. Executing OPT_EXPR pass (perform const folding).
5.5.2. Executing OPT_MERGE pass (detect identical cells).
5.5.3. Executing OPT_DFF pass (perform DFF optimizations).
5.5.4. Executing OPT_CLEAN pass (remove unused cells and wires).
5.5.5. Finished fast OPT passes.
5.6. Executing ABC pass (technology mapping using ABC).
5.6.1. Extracting gate netlist of module `\riscv_v_permutation_ALU' to `<abc-temp-dir>/input.blif'..
5.7. Executing OPT pass (performing simple optimizations).
5.7.1. Executing OPT_EXPR pass (perform const folding).
5.7.2. Executing OPT_MERGE pass (detect identical cells).
5.7.3. Executing OPT_DFF pass (perform DFF optimizations).
5.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
5.7.5. Finished fast OPT passes.
5.8. Executing HIERARCHY pass (managing design hierarchy).
5.8.1. Analyzing design hierarchy..
5.8.2. Analyzing design hierarchy..
5.9. Printing statistics.
5.10. Executing CHECK pass (checking for obvious problems).
6. Executing OPT pass (performing simple optimizations).
6.1. Executing OPT_EXPR pass (perform const folding).
6.2. Executing OPT_MERGE pass (detect identical cells).
6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
6.5. Executing OPT_MERGE pass (detect identical cells).
6.6. Executing OPT_DFF pass (perform DFF optimizations).
6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
6.8. Executing OPT_EXPR pass (perform const folding).
6.9. Rerunning OPT passes. (Maybe there is more to do..)
6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
6.12. Executing OPT_MERGE pass (detect identical cells).
6.13. Executing OPT_DFF pass (perform DFF optimizations).
6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
6.15. Executing OPT_EXPR pass (perform const folding).
6.16. Finished OPT passes. (There is nothing left to do.)
7. Executing TECHMAP pass (map to technology primitives).
7.1. Executing Verilog-2005 frontend: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/nangate45/cells_latch.v
7.2. Continuing TECHMAP pass.
8. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFRS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFR_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFFS_X2' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X1' - skipping.
Warning: Found unsupported expression 'SE*SI+D*!SE' in pin attribute of cell 'SDFF_X2' - skipping.
8.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
9. Executing OPT pass (performing simple optimizations).
9.1. Executing OPT_EXPR pass (perform const folding).
9.2. Executing OPT_MERGE pass (detect identical cells).
9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
9.5. Executing OPT_MERGE pass (detect identical cells).
9.6. Executing OPT_DFF pass (perform DFF optimizations).
9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
9.8. Executing OPT_EXPR pass (perform const folding).
9.9. Finished OPT passes. (There is nothing left to do.)
abc -script /home/ubuntu/mbucio/tools/openROAD/flow/scripts/abc_speed.script -liberty ./objects/nangate45/riscv_v_permutation_ALU/base/lib/NangateOpenCellLibrary_typical.lib -constr ./objects/nangate45/riscv_v_permutation_ALU/base/abc.constr -dont_use TAPCELL_X1 -dont_use FILLCELL_X1 -dont_use AOI211_X1 -dont_use OAI211_X1 -D 15.0
10. Executing ABC pass (technology mapping using ABC).
10.1. Extracting gate netlist of module `\riscv_v_permutation_ALU' to `<abc-temp-dir>/input.blif'..
10.1.1. Executing ABC.
10.1.2. Re-integrating ABC results.
11. Executing SETUNDEF pass (replace undef values with defined constants).
12. Executing SPLITNETS pass (splitting up multi-bit signals).
13. Executing OPT_CLEAN pass (remove unused cells and wires).
14. Executing HILOMAP pass (mapping to constant drivers).
15. Executing INSBUF pass (insert buffer cells for connected wires).
16. Executing CHECK pass (checking for obvious problems).
17. Printing statistics.
18. Executing Verilog backend.
exec cp ./designs/nangate45/riscv_v_permutation_ALU/constraint.sdc ./results/nangate45/riscv_v_permutation_ALU/base/1_synth.sdc
Warnings: 8 unique messages, 72 total
End of script. Logfile hash: 9127206356, CPU: user 0.40s system 0.02s, MEM: 35.88 MB peak
Yosys 0.46 (git sha1 e97731b9d, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 38% 2x abc (0 sec), 13% 1x dfflibmap (0 sec), ...
Elapsed time: 0:00.77[h:]min:sec. CPU time: user 0.70 sys 0.05 (98%). Peak memory: 37504KB.
mkdir -p ./results/nangate45/riscv_v_permutation_ALU/base ./logs/nangate45/riscv_v_permutation_ALU/base ./reports/nangate45/riscv_v_permutation_ALU/base
cp ./results/nangate45/riscv_v_permutation_ALU/base/1_1_yosys.v ./results/nangate45/riscv_v_permutation_ALU/base/1_synth.v
OpenROAD v2.0-16316-gf9cfd9383 
Features included (+) or not (-): +Charts +GPU +GUI +Python
This program is licensed under the BSD-3 license. See the LICENSE file for details.
Components of this program may be licensed under more restrictive licenses which must be honored.
[INFO ORD-0030] Using 8 thread(s).
mkdir -p ./objects/nangate45/riscv_v_permutation_ALU/base
Running floorplan.tcl, stage 2_1_floorplan
[INFO ODB-0227] LEF file: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/nangate45/lef/NangateOpenCellLibrary.tech.lef, created 22 layers, 27 vias
[INFO ODB-0227] LEF file: /home/ubuntu/mbucio/tools/openROAD/flow/platforms/nangate45/lef/NangateOpenCellLibrary.macro.mod.lef, created 135 library cells
[WARNING STA-0347] current_design for other than top cell not supported.
[WARNING STA-0366] port 'clk' not found.

==========================================================================
Floorplan check_setup
--------------------------------------------------------------------------
number instances in verilog is 238
[WARNING IFP-0028] Core area lower left (200.000, 200.000) snapped to (200.070, 200.200).
[INFO IFP-0001] Added 2714 rows of 19999 site FreePDK45_38x28_10R_NP_162NW_34O.
[INFO RSZ-0026] Removed 24 buffers.
Default units for flow
 time 1ns
 capacitance 1fF
 resistance 1kohm
 voltage 1v
 current 1mA
 power 1nW
 distance 1um
Report metrics stage 2, floorplan final...

==========================================================================
floorplan final report_design_area
--------------------------------------------------------------------------
Design area 226 u^2 0% utilization.
Elapsed time: 0:00.46[h:]min:sec. CPU time: user 0.40 sys 0.04 (97%). Peak memory: 124376KB.
Running io_placement_random.tcl, stage 2_2_floorplan_io
[WARNING STA-0347] current_design for other than top cell not supported.
[WARNING STA-0366] port 'clk' not found.
place_pins -hor_layers metal5 -ver_layers metal6 -random
Found 0 macro blocks.
Using 2 tracks default min distance between IO pins.
[INFO PPL-0007] Random pin placement.
Elapsed time: 0:00.39[h:]min:sec. CPU time: user 0.34 sys 0.04 (100%). Peak memory: 122696KB.
Running tdms_place.tcl, stage 2_3_floorplan_tdms
exec cp ./results/nangate45/riscv_v_permutation_ALU/base/2_2_floorplan_io.odb ./results/nangate45/riscv_v_permutation_ALU/base/2_3_floorplan_tdms.odb
Elapsed time: 0:00.18[h:]min:sec. CPU time: user 0.13 sys 0.04 (95%). Peak memory: 100192KB.
Running macro_place.tcl, stage 2_4_floorplan_macro
[WARNING STA-0347] current_design for other than top cell not supported.
[WARNING STA-0366] port 'clk' not found.
No macros found: Skipping macro_placement
Elapsed time: 0:00.39[h:]min:sec. CPU time: user 0.35 sys 0.03 (98%). Peak memory: 120664KB.
Running tapcell.tcl, stage 2_5_floorplan_tapcell
[WARNING STA-0347] current_design for other than top cell not supported.
[WARNING STA-0366] port 'clk' not found.
[INFO TAP-0004] Inserted 5428 endcaps.
[INFO TAP-0005] Inserted 42098 tapcells.
Elapsed time: 0:00.49[h:]min:sec. CPU time: user 0.43 sys 0.05 (99%). Peak memory: 140632KB.
Running pdn.tcl, stage 2_6_floorplan_pdn
[WARNING STA-0347] current_design for other than top cell not supported.
[WARNING STA-0366] port 'clk' not found.
[INFO PDN-0001] Inserting grid: grid
Elapsed time: 0:04.82[h:]min:sec. CPU time: user 4.70 sys 0.10 (99%). Peak memory: 215640KB.
cp ./results/nangate45/riscv_v_permutation_ALU/base/2_6_floorplan_pdn.odb ./results/nangate45/riscv_v_permutation_ALU/base/2_floorplan.odb
Running global_place_skip_io.tcl, stage 3_1_place_gp_skip_io
[INFO GPL-0002] DBU: 2000
[INFO GPL-0003] SiteSize: (  0.190  1.400 ) um
[INFO GPL-0004] CoreBBox: ( 200.070 200.200 ) ( 3999.880 3999.800 ) um
[INFO GPL-0006] NumInstances:             47740
[INFO GPL-0007] NumPlaceInstances:          214
[INFO GPL-0008] NumFixedInstances:        47526
[INFO GPL-0009] NumDummyInstances:            0
[INFO GPL-0010] NumNets:                    546
[INFO GPL-0011] NumPins:                   1187
[INFO GPL-0012] DieBBox:  (  0.000  0.000 ) ( 4000.000 4000.000 ) um
[INFO GPL-0013] CoreBBox: ( 200.070 200.200 ) ( 3999.880 3999.800 ) um
[INFO GPL-0016] CoreArea:            14437758.076 um^2
[INFO GPL-0017] NonPlaceInstsArea:    12641.916 um^2
[INFO GPL-0018] PlaceInstsArea:         226.100 um^2
[INFO GPL-0019] Util:                     0.002 %
[INFO GPL-0020] StdInstsArea:           226.100 um^2
[INFO GPL-0021] MacroInstsArea:           0.000 um^2
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           [NesterovSolve] Iter:  270 overflow: 0.315 HPWL: 275730741
[NesterovSolve] Iter:  280 overflow: 0.308 HPWL: 275870148
[NesterovSolve] Iter:  290 overflow: 0.301 HPWL: 275703549
[NesterovSolve] Iter:  300 overflow: 0.291 HPWL: 275872359
[NesterovSolve] Iter:  310 overflow: 0.276 HPWL: 275767610
[NesterovSolve] Iter:  320 overflow: 0.257 HPWL: 275846231
[NesterovSolve] Iter:  330 overflow: 0.238 HPWL: 275943913
[NesterovSolve] Iter:  340 overflow: 0.222 HPWL: 275996221
[NesterovSolve] Iter:  350 overflow: 0.205 HPWL: 276074471
[INFO GPL-0100] Timing-driven: executing resizer for reweighting nets.
[INFO GPL-0101] Timing-driven: worst slack 3.29e-08
[INFO GPL-0103] Timing-driven: weighted 80 nets.
[NesterovSolve] Iter:  360 overflow: 0.185 HPWL: 276180359
[NesterovSolve] Iter:  370 overflow: 0.163 HPWL: 276334574
[INFO GPL-0100] Timing-driven: executing resizer for reweighting nets.
[INFO GPL-0101] Timing-driven: worst slack 3.3e-08
[INFO GPL-0103] Timing-driven: weighted 81 nets.
[NesterovSolve] Iter:  380 overflow: 0.142 HPWL: 276519475
[NesterovSolve] Iter:  390 overflow: 0.123 HPWL: 276790055
[NesterovSolve] Iter:  400 overflow: 0.104 HPWL: 277004811
[NesterovSolve] Finished with Overflow: 0.098360
Report metrics stage 5, global place...

==========================================================================
global place report_design_area
--------------------------------------------------------------------------
Design area 36546 u^2 2% utilization.
Elapsed time: 0:33.29[h:]min:sec. CPU time: user 154.63 sys 0.38 (465%). Peak memory: 785324KB.
Running resize.tcl, stage 3_4_place_resized
Perform port buffering...
[INFO RSZ-0027] Inserted 59 input buffers.
[INFO RSZ-0028] Inserted 384 output buffers.
Perform buffer insertion...
[INFO RSZ-0058] Using max wire length 2154um.
[INFO RSZ-0034] Found 19 slew violations.
[INFO RSZ-0036] Found 14 capacitance violations.
[INFO RSZ-0038] Inserted 21 buffers in 19 nets.
[INFO RSZ-0039] Resized 847 instances.
Repair tie lo fanout...
[INFO RSZ-0042] Inserted 2 tie sky130_fd_sc_hd__conb_1 instances.
Repair tie hi fanout...
[INFO RSZ-0042] Inserted 2 tie sky130_fd_sc_hd__conb_1 instances.
Floating nets: 
Report metrics stage 3, resizer...
No registers in design

==========================================================================
resizer report_design_area
--------------------------------------------------------------------------
Design area 41564 u^2 2% utilization.
Instance count before 26649, after 27115
Pin count before 1728, after 2660
Elapsed time: 0:01.63[h:]min:sec. CPU time: user 1.27 sys 0.36 (99%). Peak memory: 649280KB.
Running detail_place.tcl, stage 3_5_place_dp
Placement Analysis
---------------------------------
total displacement       4064.2 u
average displacement        0.1 u
max displacement           38.5 u
original HPWL          277631.2 u
legalized HPWL         281346.4 u
delta HPWL                    1 %

Detailed placement improvement.
Importing netlist into detailed improver.
[INFO DPO-0100] Creating network with 27115 cells, 712 terminals, 1381 edges, 3368 pins, and 0 blockages.
[INFO DPO-0109] Network stats: inst 27827, edges 1381, pins 3368
[INFO DPO-0110] Number of regions is 1
[INFO DPO-0401] Setting random seed to 1.
[INFO DPO-0402] Setting maximum displacement 5 1 to 13600 2720 units.
[INFO DPO-0320] Collected 26770 fixed cells.
[INFO DPO-0318] Collected 1057 single height cells.
[INFO DPO-0321] Collected 0 wide cells.
[INFO DPO-0322] Image (200100, 201280) - (1599420, 1599360)
[INFO DPO-0310] Assigned 1057 cells into segments.  Movement in X-direction is 46920.000000, movement in Y-direction is 2720.000000.
[WARNING DPO-0200] Unexpected displacement during legalization.
[INFO DPO-0313] Found 0 cells in wrong regions.
[INFO DPO-0315] Found 0 row alignment problems.
[INFO DPO-0314] Found 65 site alignment problems.
[INFO DPO-0311] Found 42 overlaps between adjacent cells.
[INFO DPO-0312] Found 0 edge spacing violations and 0 padding violations.
[WARNING DPO-0201] Placement check failure during legalization.
[INFO DPO-0303] Running algorithm for independent set matching.
[INFO DPO-0300] Set matching objective is wirelength.
[INFO DPO-0301] Pass   1 of matching; objective is 2.807904e+08.
[INFO DPO-0302] End of matching; objective is 2.803580e+08, improvement is 0.15 percent.
[INFO DPO-0303] Running algorithm for global swaps.
[INFO DPO-0306] Pass   1 of global swaps; hpwl is 2.797259e+08.
[INFO DPO-0307] End of global swaps; objective is 2.797259e+08, improvement is 0.23 percent.
[INFO DPO-0303] Running algorithm for vertical swaps.
[INFO DPO-0308] Pass   1 of vertical swaps; hpwl is 2.796458e+08.
[INFO DPO-0309] End of vertical swaps; objective is 2.796458e+08, improvement is 0.03 percent.
[INFO DPO-0303] Running algorithm for reordering.
[INFO DPO-0304] Pass   1 of reordering; objective is 2.792840e+08.
[INFO DPO-0305] End of reordering; objective is 2.792840e+08, improvement is 0.13 percent.
[INFO DPO-0303] Running algorithm for random improvement.
[INFO DPO-0324] Random improver is using displacement generator.
[INFO DPO-0325] Random improver is using hpwl objective.
[INFO DPO-0326] Random improver cost string is (a).
[INFO DPO-0332] End of pass, Generator displacement called 21140 times.
[INFO DPO-0335] Generator displacement, Cumulative attempts 21140, swaps 6926, moves  4458 since last reset.
[INFO DPO-0333] End of pass, Objective hpwl, Initial cost 2.792840e+08, Scratch cost 2.786446e+08, Incremental cost 2.786446e+08, Mismatch? N
[INFO DPO-0338] End of pass, Total cost is 2.786446e+08.
[INFO DPO-0327] Pass   1 of random improver; improvement in cost is 0.23 percent.
[INFO DPO-0328] End of random improver; improvement is 0.228945 percent.
[INFO DPO-0380] Cell flipping.
[INFO DPO-0382] Changed 565 cell orientations for row compatibility.
[INFO DPO-0383] Performed 521 cell flips.
[INFO DPO-0384] End of flipping; objective is 2.776311e+08, improvement is 0.36 percent.
[INFO DPO-0313] Found 0 cells in wrong regions.
[INFO DPO-0315] Found 0 row alignment problems.
[INFO DPO-0314] Found 55 site alignment problems.
[INFO DPO-0311] Found 35 overlaps between adjacent cells.
[INFO DPO-0312] Found 0 edge spacing violations and 0 padding violations.
Detailed Improvement Results
------------------------------------------
Original HPWL           281346.4 u
Final HPWL              277499.5 u
Delta HPWL                  -1.4 %

[INFO DPL-0020] Mirrored 41 instances
[INFO DPL-0021] HPWL before          277499.5 u
[INFO DPL-0022] HPWL after           277467.9 u
[INFO DPL-0023] HPWL delta               -0.0 %
[WARNING DPL-0006] Site aligned check failed (55).
 _247_
 _284_
 _287_
 _294_
 _301_
 _302_
 _307_
 _308_
 _309_
 _317_
 _326_
 _328_
 _340_
 _343_
 _344_
 _350_
 _353_
 _361_
 _363_
 _366_
 _367_
 _393_
 _403_
 _408_
 _409_
 _413_
 _418_
 _419_
 _425_
 _426_
 _427_
 _432_
 _435_
 _440_
 _444_
 _449_
 _450_
 _453_
 _462_
 _506_
 _512_
 _514_
 _516_
 _526_
 _527_
 _528_
 _541_
 input18
 input20
 input21
 input26
 output93
 wire448
 wire449
 wire463
[ERROR DPL-0033] detailed placement checks failed.
Error: detail_place.tcl, 37 DPL-0033
Command exited with non-zero status 1
Elapsed time: 0:01.18[h:]min:sec. CPU time: user 1.04 sys 0.14 (100%). Peak memory: 404876KB.
